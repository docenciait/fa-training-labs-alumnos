
==> Audit <==
|--------------|-----------------------------------------|----------|-------------|---------|----------------------|----------------------|
|   Command    |                  Args                   | Profile  |    User     | Version |      Start Time      |       End Time       |
|--------------|-----------------------------------------|----------|-------------|---------|----------------------|----------------------|
| update-check |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:32 CEST | 12 Jun 25 19:32 CEST |
| docker-env   |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:33 CEST |                      |
| docker-env   | minikube docker-env --shell             | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:33 CEST |                      |
|              | powershell                              |          |             |         |                      |                      |
| docker-env   | minikube docker-env --shell             | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:33 CEST |                      |
|              | powershell                              |          |             |         |                      |                      |
| image        | load fastapi-gunicorn:latest            | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:34 CEST |                      |
| image        | ls                                      | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:34 CEST |                      |
| start        |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:35 CEST | 12 Jun 25 19:37 CEST |
| image        | load fastapi-gunicorn:latest            | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:37 CEST | 12 Jun 25 19:38 CEST |
| ssh          |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:38 CEST | 12 Jun 25 19:39 CEST |
| service      | fastapi-service                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:39 CEST |                      |
| ip           |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:40 CEST | 12 Jun 25 19:40 CEST |
| addons       | enable ingress                          | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:42 CEST | 12 Jun 25 19:43 CEST |
| docker-env   | minikube docker-env --shell             | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:43 CEST | 12 Jun 25 19:43 CEST |
|              | powershell                              |          |             |         |                      |                      |
| ip           |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:44 CEST | 12 Jun 25 19:44 CEST |
| ip           |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:46 CEST | 12 Jun 25 19:46 CEST |
| image        | load fastapi-gunicorn:latest            | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:47 CEST | 12 Jun 25 19:47 CEST |
| ip           |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:48 CEST | 12 Jun 25 19:48 CEST |
| image        | load fastapi-gunicorn:latest            | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:50 CEST | 12 Jun 25 19:50 CEST |
| ssh          |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:51 CEST |                      |
| service      | fastapi-service                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:51 CEST |                      |
| delete       |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:52 CEST | 12 Jun 25 19:52 CEST |
| start        |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:53 CEST | 12 Jun 25 19:53 CEST |
| stop         |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:56 CEST | 12 Jun 25 19:57 CEST |
| delete       |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:57 CEST | 12 Jun 25 19:57 CEST |
| start        |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:57 CEST | 12 Jun 25 19:58 CEST |
| image        | load fastapi-gunicorn:latest            | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:58 CEST | 12 Jun 25 19:58 CEST |
| ip           |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 19:59 CEST | 12 Jun 25 19:59 CEST |
| stop         |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 20:03 CEST | 12 Jun 25 20:03 CEST |
| delete       |                                         | minikube | PCA11\Admin | v1.36.0 | 12 Jun 25 20:04 CEST | 12 Jun 25 20:04 CEST |
| update-check |                                         | minikube | PCA11\Admin | v1.36.0 | 13 Jun 25 09:47 CEST | 13 Jun 25 09:47 CEST |
| start        |                                         | minikube | PCA11\Admin | v1.36.0 | 14 Jun 25 11:40 CEST |                      |
| docker-env   | minikube docker-env                     | minikube | PCA11\Admin | v1.36.0 | 14 Jun 25 11:54 CEST |                      |
| update-check |                                         | minikube | PCA11\Admin | v1.36.0 | 14 Jun 25 11:55 CEST | 14 Jun 25 11:55 CEST |
| start        |                                         | minikube | PCA11\Admin | v1.36.0 | 14 Jun 25 11:56 CEST |                      |
| delete       |                                         | minikube | PCA11\Admin | v1.36.0 | 14 Jun 25 11:57 CEST | 14 Jun 25 11:57 CEST |
| start        | --driver=hyperv                         | minikube | PCA11\Admin | v1.36.0 | 14 Jun 25 11:58 CEST |                      |
|              | --hyperv-virtual-switch=minikube-switch |          |             |         |                      |                      |
| start        | --driver=hyperv                         | minikube | PCA11\Admin | v1.36.0 | 14 Jun 25 11:58 CEST |                      |
|              | --hyperv-virtual-switch=minikube-switch |          |             |         |                      |                      |
| delete       |                                         | minikube | PCA11\Admin | v1.36.0 | 14 Jun 25 12:06 CEST | 14 Jun 25 12:06 CEST |
| start        | --driver=docker                         | minikube | PCA11\Admin | v1.36.0 | 14 Jun 25 12:07 CEST | 14 Jun 25 12:08 CEST |
| service      | fastapi-service                         | minikube | PCA11\Admin | v1.36.0 | 14 Jun 25 12:09 CEST |                      |
|--------------|-----------------------------------------|----------|-------------|---------|----------------------|----------------------|


==> Last Start <==
Log file created at: 2025/06/14 12:07:20
Running on machine: PCA11
Binary: Built with gc go1.24.0 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0614 12:07:20.438273   18372 out.go:345] Setting OutFile to fd 104 ...
I0614 12:07:20.450716   18372 out.go:358] Setting ErrFile to fd 108...
I0614 12:07:20.461043   18372 out.go:352] Setting JSON to false
I0614 12:07:20.464710   18372 start.go:130] hostinfo: {"hostname":"PCA11","uptime":2180,"bootTime":1749893459,"procs":253,"os":"windows","platform":"Microsoft Windows 11 Pro Education","platformFamily":"Standalone Workstation","platformVersion":"10.0.26100.4061 Build 26100.4061","kernelVersion":"10.0.26100.4061 Build 26100.4061","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"217e61d0-6bfd-4804-91ff-2bfd96e7803c"}
W0614 12:07:20.464710   18372 start.go:138] gopshost.Virtualization returned error: not implemented yet
I0614 12:07:20.467460   18372 out.go:177] 😄  minikube v1.36.0 en Microsoft Windows 11 Pro Education 10.0.26100.4061 Build 26100.4061
I0614 12:07:20.469549   18372 notify.go:220] Checking for updates...
I0614 12:07:20.470062   18372 driver.go:404] Setting default libvirt URI to qemu:///system
I0614 12:07:20.596599   18372 docker.go:123] docker version: linux-28.1.1:Docker Desktop 4.41.2 (191736)
I0614 12:07:20.598695   18372 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0614 12:07:20.748324   18372 info.go:266] docker info: {ID:901d9e87-a101-4fb4-b7ae-80c87338eabe Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:22 Driver:overlayfs DriverStatus:[[driver-type io.containerd.snapshotter.v1]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:66 OomKillDisable:false NGoroutines:86 SystemTime:2025-06-14 10:07:20.730575301 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:17 KernelVersion:6.6.87.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[::1/128 127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:8209522688 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=npipe://\\.\pipe\docker_cli] ExperimentalBuild:false ServerVersion:28.1.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:05044ec0a9a75232cad458027ca83437aae3f4da Expected:} RuncCommit:{ID:v1.2.5-0-g59923ef Expected:} InitCommit:{ID:de40ad0 Expected:} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: DOCKER_INSECURE_NO_IPTABLES_RAW is set WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:ai Path:C:\Program Files\Docker\cli-plugins\docker-ai.exe SchemaVersion:0.1.0 ShortDescription:Docker AI Agent - Ask Gordon Vendor:Docker Inc. Version:v1.1.7] map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.23.0-desktop.1] map[Name:cloud Path:C:\Program Files\Docker\cli-plugins\docker-cloud.exe SchemaVersion:0.1.0 ShortDescription:Docker Cloud Vendor:Docker Inc. Version:v0.3.0] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.35.1-desktop.1] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.38] map[Name:desktop Path:C:\Program Files\Docker\cli-plugins\docker-desktop.exe SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands Vendor:Docker Inc. Version:v0.1.8] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.27] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.4.0] map[Name:mcp Path:C:\Program Files\Docker\cli-plugins\docker-mcp.exe SchemaVersion:0.1.0 ShortDescription:Docker MCP Plugin Vendor:Docker Inc. Version:dev] map[Name:model Path:C:\Program Files\Docker\cli-plugins\docker-model.exe SchemaVersion:0.1.0 ShortDescription:Docker Model Runner Vendor:Docker Inc. Version:v0.1.11] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.17.1]] Warnings:<nil>}}
I0614 12:07:20.750497   18372 out.go:177] ✨  Using the docker driver based on user configuration
I0614 12:07:20.752600   18372 start.go:304] selected driver: docker
I0614 12:07:20.752600   18372 start.go:908] validating driver "docker" against <nil>
I0614 12:07:20.752600   18372 start.go:919] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0614 12:07:20.757457   18372 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0614 12:07:20.917592   18372 info.go:266] docker info: {ID:901d9e87-a101-4fb4-b7ae-80c87338eabe Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:22 Driver:overlayfs DriverStatus:[[driver-type io.containerd.snapshotter.v1]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:66 OomKillDisable:false NGoroutines:86 SystemTime:2025-06-14 10:07:20.906811313 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:17 KernelVersion:6.6.87.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[::1/128 127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:8209522688 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=npipe://\\.\pipe\docker_cli] ExperimentalBuild:false ServerVersion:28.1.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:05044ec0a9a75232cad458027ca83437aae3f4da Expected:} RuncCommit:{ID:v1.2.5-0-g59923ef Expected:} InitCommit:{ID:de40ad0 Expected:} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: DOCKER_INSECURE_NO_IPTABLES_RAW is set WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:ai Path:C:\Program Files\Docker\cli-plugins\docker-ai.exe SchemaVersion:0.1.0 ShortDescription:Docker AI Agent - Ask Gordon Vendor:Docker Inc. Version:v1.1.7] map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.23.0-desktop.1] map[Name:cloud Path:C:\Program Files\Docker\cli-plugins\docker-cloud.exe SchemaVersion:0.1.0 ShortDescription:Docker Cloud Vendor:Docker Inc. Version:v0.3.0] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.35.1-desktop.1] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.38] map[Name:desktop Path:C:\Program Files\Docker\cli-plugins\docker-desktop.exe SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands Vendor:Docker Inc. Version:v0.1.8] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.27] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.4.0] map[Name:mcp Path:C:\Program Files\Docker\cli-plugins\docker-mcp.exe SchemaVersion:0.1.0 ShortDescription:Docker MCP Plugin Vendor:Docker Inc. Version:dev] map[Name:model Path:C:\Program Files\Docker\cli-plugins\docker-model.exe SchemaVersion:0.1.0 ShortDescription:Docker Model Runner Vendor:Docker Inc. Version:v0.1.11] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.17.1]] Warnings:<nil>}}
I0614 12:07:20.917592   18372 start_flags.go:311] no existing cluster config was found, will generate one from the flags 
I0614 12:07:20.938434   18372 start_flags.go:394] Using suggested 4000MB memory alloc based on sys=16161MB, container=7829MB
I0614 12:07:20.938434   18372 start_flags.go:958] Wait components to verify : map[apiserver:true system_pods:true]
I0614 12:07:20.940652   18372 out.go:177] 📌  Using Docker Desktop driver with root privileges
I0614 12:07:20.941192   18372 cni.go:84] Creating CNI manager for ""
I0614 12:07:20.941192   18372 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0614 12:07:20.941192   18372 start_flags.go:320] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0614 12:07:20.941192   18372 start.go:347] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b Memory:4000 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Admin:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0614 12:07:20.942781   18372 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I0614 12:07:20.944843   18372 cache.go:121] Beginning downloading kic base image for docker with docker
I0614 12:07:20.945377   18372 out.go:177] 🚜  Pulling base image v0.0.47 ...
I0614 12:07:20.947585   18372 preload.go:131] Checking if preload exists for k8s version v1.33.1 and runtime docker
I0614 12:07:20.947585   18372 image.go:81] Checking for gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b in local docker daemon
I0614 12:07:20.947585   18372 preload.go:146] Found local preload: C:\Users\Admin\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4
I0614 12:07:20.947585   18372 cache.go:56] Caching tarball of preloaded images
I0614 12:07:20.947585   18372 preload.go:172] Found C:\Users\Admin\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0614 12:07:20.947585   18372 cache.go:59] Finished verifying existence of preloaded tar for v1.33.1 on docker
I0614 12:07:20.948118   18372 profile.go:143] Saving config to C:\Users\Admin\.minikube\profiles\minikube\config.json ...
I0614 12:07:20.948118   18372 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\config.json: {Name:mkb842de599a4383c243149e501d1ba8f270ad92 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0614 12:07:21.044725   18372 cache.go:150] Downloading gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b to local cache
I0614 12:07:21.045262   18372 localpath.go:146] windows sanitize: C:\Users\Admin\.minikube\cache\kic\amd64\kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b.tar -> C:\Users\Admin\.minikube\cache\kic\amd64\kicbase_v0.0.47@sha256_6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b.tar
I0614 12:07:21.045262   18372 localpath.go:146] windows sanitize: C:\Users\Admin\.minikube\cache\kic\amd64\kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b.tar -> C:\Users\Admin\.minikube\cache\kic\amd64\kicbase_v0.0.47@sha256_6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b.tar
I0614 12:07:21.045262   18372 image.go:65] Checking for gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b in local cache directory
I0614 12:07:21.046296   18372 image.go:68] Found gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b in local cache directory, skipping pull
I0614 12:07:21.046296   18372 image.go:137] gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b exists in cache, skipping pull
I0614 12:07:21.046296   18372 cache.go:153] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b as a tarball
I0614 12:07:21.046296   18372 cache.go:163] Loading gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b from local cache
I0614 12:07:21.046296   18372 localpath.go:146] windows sanitize: C:\Users\Admin\.minikube\cache\kic\amd64\kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b.tar -> C:\Users\Admin\.minikube\cache\kic\amd64\kicbase_v0.0.47@sha256_6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b.tar
I0614 12:07:43.320687   18372 cache.go:165] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b from cached tarball
I0614 12:07:43.320687   18372 cache.go:230] Successfully downloaded all kic artifacts
I0614 12:07:43.321198   18372 start.go:360] acquireMachinesLock for minikube: {Name:mke44c75636b18815dbc47d215a0423d8d16b1b6 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0614 12:07:43.321758   18372 start.go:364] duration metric: took 559.8µs to acquireMachinesLock for "minikube"
I0614 12:07:43.321758   18372 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b Memory:4000 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Admin:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} &{Name: IP: Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}
I0614 12:07:43.321758   18372 start.go:125] createHost starting for "" (driver="docker")
I0614 12:07:43.324352   18372 out.go:235] 🔥  Creating docker container (CPUs=2, Memory=4000MB) ...
I0614 12:07:43.325919   18372 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0614 12:07:43.325919   18372 client.go:168] LocalClient.Create starting
I0614 12:07:43.325919   18372 main.go:141] libmachine: Reading certificate data from C:\Users\Admin\.minikube\certs\ca.pem
I0614 12:07:43.326455   18372 main.go:141] libmachine: Decoding PEM data...
I0614 12:07:43.326455   18372 main.go:141] libmachine: Parsing certificate...
I0614 12:07:43.326455   18372 main.go:141] libmachine: Reading certificate data from C:\Users\Admin\.minikube\certs\cert.pem
I0614 12:07:43.326455   18372 main.go:141] libmachine: Decoding PEM data...
I0614 12:07:43.326455   18372 main.go:141] libmachine: Parsing certificate...
I0614 12:07:43.331241   18372 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0614 12:07:43.386660   18372 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0614 12:07:43.390815   18372 network_create.go:284] running [docker network inspect minikube] to gather additional debugging logs...
I0614 12:07:43.390815   18372 cli_runner.go:164] Run: docker network inspect minikube
W0614 12:07:43.431764   18372 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0614 12:07:43.431764   18372 network_create.go:287] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0614 12:07:43.431764   18372 network_create.go:289] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0614 12:07:43.437243   18372 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0614 12:07:43.497074   18372 network.go:206] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc0016a96e0}
I0614 12:07:43.497074   18372 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0614 12:07:43.500822   18372 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0614 12:07:43.588007   18372 network_create.go:108] docker network minikube 192.168.49.0/24 created
I0614 12:07:43.588007   18372 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I0614 12:07:43.596061   18372 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0614 12:07:43.631307   18372 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0614 12:07:43.670068   18372 oci.go:103] Successfully created a docker volume minikube
I0614 12:07:43.673452   18372 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b -d /var/lib
I0614 12:07:45.033844   18372 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b -d /var/lib: (1.3603927s)
I0614 12:07:45.033844   18372 oci.go:107] Successfully prepared a docker volume minikube
I0614 12:07:45.033844   18372 preload.go:131] Checking if preload exists for k8s version v1.33.1 and runtime docker
I0614 12:07:45.033844   18372 kic.go:194] Starting extracting preloaded images to volume ...
I0614 12:07:45.038775   18372 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\Admin\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b -I lz4 -xf /preloaded.tar -C /extractDir
I0614 12:08:00.921845   18372 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\Admin\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b -I lz4 -xf /preloaded.tar -C /extractDir: (15.8830703s)
I0614 12:08:00.921845   18372 kic.go:203] duration metric: took 15.888001s to extract preloaded images to volume ...
I0614 12:08:00.924529   18372 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0614 12:08:01.090483   18372 info.go:266] docker info: {ID:901d9e87-a101-4fb4-b7ae-80c87338eabe Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:22 Driver:overlayfs DriverStatus:[[driver-type io.containerd.snapshotter.v1]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:69 OomKillDisable:false NGoroutines:89 SystemTime:2025-06-14 10:08:01.081718423 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:17 KernelVersion:6.6.87.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[::1/128 127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:8209522688 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=npipe://\\.\pipe\docker_cli] ExperimentalBuild:false ServerVersion:28.1.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:05044ec0a9a75232cad458027ca83437aae3f4da Expected:} RuncCommit:{ID:v1.2.5-0-g59923ef Expected:} InitCommit:{ID:de40ad0 Expected:} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: DOCKER_INSECURE_NO_IPTABLES_RAW is set WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:ai Path:C:\Program Files\Docker\cli-plugins\docker-ai.exe SchemaVersion:0.1.0 ShortDescription:Docker AI Agent - Ask Gordon Vendor:Docker Inc. Version:v1.1.7] map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.23.0-desktop.1] map[Name:cloud Path:C:\Program Files\Docker\cli-plugins\docker-cloud.exe SchemaVersion:0.1.0 ShortDescription:Docker Cloud Vendor:Docker Inc. Version:v0.3.0] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.35.1-desktop.1] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.38] map[Name:desktop Path:C:\Program Files\Docker\cli-plugins\docker-desktop.exe SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands Vendor:Docker Inc. Version:v0.1.8] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.27] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.4.0] map[Name:mcp Path:C:\Program Files\Docker\cli-plugins\docker-mcp.exe SchemaVersion:0.1.0 ShortDescription:Docker MCP Plugin Vendor:Docker Inc. Version:dev] map[Name:model Path:C:\Program Files\Docker\cli-plugins\docker-model.exe SchemaVersion:0.1.0 ShortDescription:Docker Model Runner Vendor:Docker Inc. Version:v0.1.11] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.17.1]] Warnings:<nil>}}
I0614 12:08:01.093725   18372 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0614 12:08:01.247974   18372 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=4000mb --memory-swap=4000mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b
I0614 12:08:01.632224   18372 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0614 12:08:01.674165   18372 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0614 12:08:01.712837   18372 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0614 12:08:01.799569   18372 oci.go:144] the created container "minikube" has a running status.
I0614 12:08:01.799569   18372 kic.go:225] Creating ssh key for kic: C:\Users\Admin\.minikube\machines\minikube\id_rsa...
I0614 12:08:01.990910   18372 kic_runner.go:191] docker (temp): C:\Users\Admin\.minikube\machines\minikube\id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0614 12:08:02.047836   18372 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0614 12:08:02.095223   18372 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0614 12:08:02.095223   18372 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0614 12:08:02.206741   18372 kic.go:265] ensuring only current user has permissions to key file located at : C:\Users\Admin\.minikube\machines\minikube\id_rsa...
I0614 12:08:02.535663   18372 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0614 12:08:02.571324   18372 machine.go:93] provisionDockerMachine start ...
I0614 12:08:02.575058   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:02.610870   18372 main.go:141] libmachine: Using SSH client type: native
I0614 12:08:02.618754   18372 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x105a9e0] 0x105d520 <nil>  [] 0s} 127.0.0.1 55146 <nil> <nil>}
I0614 12:08:02.618754   18372 main.go:141] libmachine: About to run SSH command:
hostname
I0614 12:08:02.757145   18372 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0614 12:08:02.757145   18372 ubuntu.go:169] provisioning hostname "minikube"
I0614 12:08:02.762492   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:02.800348   18372 main.go:141] libmachine: Using SSH client type: native
I0614 12:08:02.800862   18372 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x105a9e0] 0x105d520 <nil>  [] 0s} 127.0.0.1 55146 <nil> <nil>}
I0614 12:08:02.800862   18372 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0614 12:08:02.972955   18372 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0614 12:08:02.976651   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:03.011795   18372 main.go:141] libmachine: Using SSH client type: native
I0614 12:08:03.012319   18372 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x105a9e0] 0x105d520 <nil>  [] 0s} 127.0.0.1 55146 <nil> <nil>}
I0614 12:08:03.012319   18372 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0614 12:08:03.132787   18372 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0614 12:08:03.132787   18372 ubuntu.go:175] set auth options {CertDir:C:\Users\Admin\.minikube CaCertPath:C:\Users\Admin\.minikube\certs\ca.pem CaPrivateKeyPath:C:\Users\Admin\.minikube\certs\ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:C:\Users\Admin\.minikube\machines\server.pem ServerKeyPath:C:\Users\Admin\.minikube\machines\server-key.pem ClientKeyPath:C:\Users\Admin\.minikube\certs\key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:C:\Users\Admin\.minikube\certs\cert.pem ServerCertSANs:[] StorePath:C:\Users\Admin\.minikube}
I0614 12:08:03.132787   18372 ubuntu.go:177] setting up certificates
I0614 12:08:03.132787   18372 provision.go:84] configureAuth start
I0614 12:08:03.135655   18372 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0614 12:08:03.167210   18372 provision.go:143] copyHostCerts
I0614 12:08:03.167736   18372 exec_runner.go:144] found C:\Users\Admin\.minikube/ca.pem, removing ...
I0614 12:08:03.167736   18372 exec_runner.go:203] rm: C:\Users\Admin\.minikube\ca.pem
I0614 12:08:03.168299   18372 exec_runner.go:151] cp: C:\Users\Admin\.minikube\certs\ca.pem --> C:\Users\Admin\.minikube/ca.pem (1074 bytes)
I0614 12:08:03.168995   18372 exec_runner.go:144] found C:\Users\Admin\.minikube/cert.pem, removing ...
I0614 12:08:03.168995   18372 exec_runner.go:203] rm: C:\Users\Admin\.minikube\cert.pem
I0614 12:08:03.168995   18372 exec_runner.go:151] cp: C:\Users\Admin\.minikube\certs\cert.pem --> C:\Users\Admin\.minikube/cert.pem (1119 bytes)
I0614 12:08:03.176833   18372 exec_runner.go:144] found C:\Users\Admin\.minikube/key.pem, removing ...
I0614 12:08:03.176833   18372 exec_runner.go:203] rm: C:\Users\Admin\.minikube\key.pem
I0614 12:08:03.177355   18372 exec_runner.go:151] cp: C:\Users\Admin\.minikube\certs\key.pem --> C:\Users\Admin\.minikube/key.pem (1675 bytes)
I0614 12:08:03.177881   18372 provision.go:117] generating server cert: C:\Users\Admin\.minikube\machines\server.pem ca-key=C:\Users\Admin\.minikube\certs\ca.pem private-key=C:\Users\Admin\.minikube\certs\ca-key.pem org=Admin.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0614 12:08:03.332818   18372 provision.go:177] copyRemoteCerts
I0614 12:08:03.333969   18372 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0614 12:08:03.336514   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:03.371285   18372 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55146 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0614 12:08:03.459337   18372 ssh_runner.go:362] scp C:\Users\Admin\.minikube\certs\ca.pem --> /etc/docker/ca.pem (1074 bytes)
I0614 12:08:03.480869   18372 ssh_runner.go:362] scp C:\Users\Admin\.minikube\machines\server.pem --> /etc/docker/server.pem (1176 bytes)
I0614 12:08:03.500489   18372 ssh_runner.go:362] scp C:\Users\Admin\.minikube\machines\server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0614 12:08:03.518703   18372 provision.go:87] duration metric: took 385.9162ms to configureAuth
I0614 12:08:03.518703   18372 ubuntu.go:193] setting minikube options for container-runtime
I0614 12:08:03.519220   18372 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.33.1
I0614 12:08:03.521847   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:03.554669   18372 main.go:141] libmachine: Using SSH client type: native
I0614 12:08:03.554669   18372 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x105a9e0] 0x105d520 <nil>  [] 0s} 127.0.0.1 55146 <nil> <nil>}
I0614 12:08:03.554669   18372 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0614 12:08:03.681290   18372 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0614 12:08:03.681290   18372 ubuntu.go:71] root file system type: overlay
I0614 12:08:03.681290   18372 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0614 12:08:03.684277   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:03.717748   18372 main.go:141] libmachine: Using SSH client type: native
I0614 12:08:03.718301   18372 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x105a9e0] 0x105d520 <nil>  [] 0s} 127.0.0.1 55146 <nil> <nil>}
I0614 12:08:03.718301   18372 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0614 12:08:03.854466   18372 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0614 12:08:03.858224   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:03.889488   18372 main.go:141] libmachine: Using SSH client type: native
I0614 12:08:03.890004   18372 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x105a9e0] 0x105d520 <nil>  [] 0s} 127.0.0.1 55146 <nil> <nil>}
I0614 12:08:03.890004   18372 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0614 12:08:05.511209   18372 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2025-04-18 09:50:48.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2025-06-14 10:08:03.850616627 +0000
@@ -1,46 +1,49 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target nss-lookup.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
+LimitNOFILE=infinity
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0614 12:08:05.511209   18372 machine.go:96] duration metric: took 2.9398851s to provisionDockerMachine
I0614 12:08:05.511209   18372 client.go:171] duration metric: took 22.1852901s to LocalClient.Create
I0614 12:08:05.511209   18372 start.go:167] duration metric: took 22.1852901s to libmachine.API.Create "minikube"
I0614 12:08:05.511209   18372 start.go:293] postStartSetup for "minikube" (driver="docker")
I0614 12:08:05.511209   18372 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0614 12:08:05.511712   18372 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0614 12:08:05.514831   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:05.544999   18372 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55146 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0614 12:08:05.642591   18372 ssh_runner.go:195] Run: cat /etc/os-release
I0614 12:08:05.645785   18372 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0614 12:08:05.645785   18372 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0614 12:08:05.645785   18372 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0614 12:08:05.645785   18372 info.go:137] Remote host: Ubuntu 22.04.5 LTS
I0614 12:08:05.645785   18372 filesync.go:126] Scanning C:\Users\Admin\.minikube\addons for local assets ...
I0614 12:08:05.645785   18372 filesync.go:126] Scanning C:\Users\Admin\.minikube\files for local assets ...
I0614 12:08:05.645785   18372 start.go:296] duration metric: took 134.5768ms for postStartSetup
I0614 12:08:05.649520   18372 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0614 12:08:05.680760   18372 profile.go:143] Saving config to C:\Users\Admin\.minikube\profiles\minikube\config.json ...
I0614 12:08:05.688314   18372 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0614 12:08:05.691524   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:05.721017   18372 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55146 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0614 12:08:05.811343   18372 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0614 12:08:05.815004   18372 start.go:128] duration metric: took 22.4932457s to createHost
I0614 12:08:05.815004   18372 start.go:83] releasing machines lock for "minikube", held for 22.4932457s
I0614 12:08:05.818159   18372 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0614 12:08:05.848563   18372 ssh_runner.go:195] Run: curl.exe -sS -m 2 https://registry.k8s.io/
I0614 12:08:05.851828   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:05.852880   18372 ssh_runner.go:195] Run: cat /version.json
I0614 12:08:05.855474   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:05.885826   18372 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55146 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0614 12:08:05.886904   18372 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55146 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
W0614 12:08:05.976678   18372 start.go:867] [curl.exe -sS -m 2 https://registry.k8s.io/] failed: curl.exe -sS -m 2 https://registry.k8s.io/: Process exited with status 127
stdout:

stderr:
bash: line 1: curl.exe: command not found
I0614 12:08:05.981972   18372 ssh_runner.go:195] Run: systemctl --version
I0614 12:08:05.991490   18372 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0614 12:08:05.997148   18372 ssh_runner.go:195] Run: sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
W0614 12:08:06.008484   18372 start.go:439] unable to name loopback interface in configureRuntimes: unable to patch loopback cni config "/etc/cni/net.d/*loopback.conf*": sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;: Process exited with status 1
stdout:

stderr:
find: '\\etc\\cni\\net.d': No such file or directory
I0614 12:08:06.009141   18372 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%p, " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0614 12:08:06.038253   18372 cni.go:262] disabled [/etc/cni/net.d/87-podman-bridge.conflist, /etc/cni/net.d/100-crio-bridge.conf] bridge cni config(s)
I0614 12:08:06.038253   18372 start.go:495] detecting cgroup driver to use...
I0614 12:08:06.038253   18372 detect.go:187] detected "cgroupfs" cgroup driver on host os
I0614 12:08:06.038253   18372 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0614 12:08:06.054513   18372 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.10"|' /etc/containerd/config.toml"
I0614 12:08:06.068490   18372 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0614 12:08:06.077834   18372 containerd.go:146] configuring containerd to use "cgroupfs" as cgroup driver...
I0614 12:08:06.081495   18372 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
W0614 12:08:06.091677   18372 out.go:270] ❗  Failing to connect to https://registry.k8s.io/ from inside the minikube container
W0614 12:08:06.091677   18372 out.go:270] 💡  To pull new external images, you may need to configure a proxy: https://minikube.sigs.k8s.io/docs/reference/networking/proxy/
I0614 12:08:06.094296   18372 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0614 12:08:06.106651   18372 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0614 12:08:06.119134   18372 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0614 12:08:06.132194   18372 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0614 12:08:06.144284   18372 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0614 12:08:06.157055   18372 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0614 12:08:06.169684   18372 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0614 12:08:06.178547   18372 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0614 12:08:06.186976   18372 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0614 12:08:06.194639   18372 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0614 12:08:06.254174   18372 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0614 12:08:06.374421   18372 start.go:495] detecting cgroup driver to use...
I0614 12:08:06.374421   18372 detect.go:187] detected "cgroupfs" cgroup driver on host os
I0614 12:08:06.375094   18372 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0614 12:08:06.395384   18372 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0614 12:08:06.395891   18372 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0614 12:08:06.405602   18372 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0614 12:08:06.424457   18372 ssh_runner.go:195] Run: which cri-dockerd
I0614 12:08:06.428642   18372 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0614 12:08:06.436373   18372 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (190 bytes)
I0614 12:08:06.450491   18372 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0614 12:08:06.505242   18372 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0614 12:08:06.546164   18372 docker.go:587] configuring docker to use "cgroupfs" as cgroup driver...
I0614 12:08:06.546164   18372 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0614 12:08:06.559703   18372 ssh_runner.go:195] Run: sudo systemctl reset-failed docker
I0614 12:08:06.568231   18372 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0614 12:08:06.627530   18372 ssh_runner.go:195] Run: sudo systemctl restart docker
I0614 12:08:08.948253   18372 ssh_runner.go:235] Completed: sudo systemctl restart docker: (2.3207231s)
I0614 12:08:08.948962   18372 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0614 12:08:08.960009   18372 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0614 12:08:08.970210   18372 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0614 12:08:09.012296   18372 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0614 12:08:09.052465   18372 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0614 12:08:09.108887   18372 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0614 12:08:09.165836   18372 ssh_runner.go:195] Run: sudo systemctl reset-failed cri-docker.service
I0614 12:08:09.175885   18372 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0614 12:08:09.230810   18372 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0614 12:08:09.645449   18372 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0614 12:08:09.654375   18372 start.go:542] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0614 12:08:09.659191   18372 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0614 12:08:09.662700   18372 start.go:563] Will wait 60s for crictl version
I0614 12:08:09.666931   18372 ssh_runner.go:195] Run: which crictl
I0614 12:08:09.670039   18372 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0614 12:08:09.886352   18372 start.go:579] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  28.1.1
RuntimeApiVersion:  v1
I0614 12:08:09.888937   18372 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0614 12:08:10.082049   18372 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0614 12:08:10.102993   18372 out.go:235] 🐳  Preparando Kubernetes v1.33.1 en Docker 28.1.1...
I0614 12:08:10.105644   18372 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0614 12:08:10.256820   18372 network.go:96] got host ip for mount in container by digging dns: 192.168.65.254
I0614 12:08:10.261153   18372 ssh_runner.go:195] Run: grep 192.168.65.254	host.minikube.internal$ /etc/hosts
I0614 12:08:10.264317   18372 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.254	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0614 12:08:10.276296   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0614 12:08:10.305471   18372 kubeadm.go:875] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b Memory:4000 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Admin:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0614 12:08:10.305471   18372 preload.go:131] Checking if preload exists for k8s version v1.33.1 and runtime docker
I0614 12:08:10.308246   18372 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0614 12:08:10.325627   18372 docker.go:702] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.33.1
registry.k8s.io/kube-controller-manager:v1.33.1
registry.k8s.io/kube-scheduler:v1.33.1
registry.k8s.io/kube-proxy:v1.33.1
registry.k8s.io/etcd:3.5.21-0
registry.k8s.io/coredns/coredns:v1.12.0
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0614 12:08:10.325627   18372 docker.go:632] Images already preloaded, skipping extraction
I0614 12:08:10.327747   18372 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0614 12:08:10.342502   18372 docker.go:702] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.33.1
registry.k8s.io/kube-controller-manager:v1.33.1
registry.k8s.io/kube-scheduler:v1.33.1
registry.k8s.io/kube-proxy:v1.33.1
registry.k8s.io/etcd:3.5.21-0
registry.k8s.io/coredns/coredns:v1.12.0
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0614 12:08:10.342502   18372 cache_images.go:84] Images are preloaded, skipping loading
I0614 12:08:10.342502   18372 kubeadm.go:926] updating node { 192.168.49.2 8443 v1.33.1 docker true true} ...
I0614 12:08:10.342502   18372 kubeadm.go:938] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.33.1/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0614 12:08:10.345396   18372 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0614 12:08:10.740710   18372 cni.go:84] Creating CNI manager for ""
I0614 12:08:10.740710   18372 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0614 12:08:10.740710   18372 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0614 12:08:10.740710   18372 kubeadm.go:189] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.33.1 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0614 12:08:10.740710   18372 kubeadm.go:195] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    - name: "node-ip"
      value: "192.168.49.2"
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    - name: "enable-admission-plugins"
      value: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    - name: "allocate-node-cidrs"
      value: "true"
    - name: "leader-elect"
      value: "false"
scheduler:
  extraArgs:
    - name: "leader-elect"
      value: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      - name: "proxy-refresh-interval"
        value: "70000"
kubernetesVersion: v1.33.1
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0614 12:08:10.741227   18372 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.33.1
I0614 12:08:10.749509   18372 binaries.go:44] Found k8s binaries, skipping transfer
I0614 12:08:10.749509   18372 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0614 12:08:10.757045   18372 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0614 12:08:10.771341   18372 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0614 12:08:10.784274   18372 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2286 bytes)
I0614 12:08:10.801943   18372 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0614 12:08:10.805363   18372 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0614 12:08:10.814382   18372 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0614 12:08:10.869025   18372 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0614 12:08:10.909273   18372 certs.go:68] Setting up C:\Users\Admin\.minikube\profiles\minikube for IP: 192.168.49.2
I0614 12:08:10.909273   18372 certs.go:194] generating shared ca certs ...
I0614 12:08:10.909273   18372 certs.go:226] acquiring lock for ca certs: {Name:mkf28197c9a65e99074f3ba820d4a88215c788d1 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0614 12:08:10.933837   18372 certs.go:235] skipping valid "minikubeCA" ca cert: C:\Users\Admin\.minikube\ca.key
I0614 12:08:10.948904   18372 certs.go:235] skipping valid "proxyClientCA" ca cert: C:\Users\Admin\.minikube\proxy-client-ca.key
I0614 12:08:10.948904   18372 certs.go:256] generating profile certs ...
I0614 12:08:10.949438   18372 certs.go:363] generating signed profile cert for "minikube-user": C:\Users\Admin\.minikube\profiles\minikube\client.key
I0614 12:08:10.949438   18372 crypto.go:68] Generating cert C:\Users\Admin\.minikube\profiles\minikube\client.crt with IP's: []
I0614 12:08:11.223720   18372 crypto.go:156] Writing cert to C:\Users\Admin\.minikube\profiles\minikube\client.crt ...
I0614 12:08:11.223720   18372 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\client.crt: {Name:mk1088756822fd6108ab8c590b8f04de5c861459 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0614 12:08:11.223720   18372 crypto.go:164] Writing key to C:\Users\Admin\.minikube\profiles\minikube\client.key ...
I0614 12:08:11.223720   18372 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\client.key: {Name:mk943e34b9a372ab81d18a1e9fc44914797b7e64 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0614 12:08:11.224722   18372 certs.go:363] generating signed profile cert for "minikube": C:\Users\Admin\.minikube\profiles\minikube\apiserver.key.7fb57e3c
I0614 12:08:11.224722   18372 crypto.go:68] Generating cert C:\Users\Admin\.minikube\profiles\minikube\apiserver.crt.7fb57e3c with IP's: [10.96.0.1 127.0.0.1 10.0.0.1 192.168.49.2]
I0614 12:08:11.448145   18372 crypto.go:156] Writing cert to C:\Users\Admin\.minikube\profiles\minikube\apiserver.crt.7fb57e3c ...
I0614 12:08:11.448145   18372 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\apiserver.crt.7fb57e3c: {Name:mk984336c03184edb97ec50ddce80084f20bbacd Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0614 12:08:11.449146   18372 crypto.go:164] Writing key to C:\Users\Admin\.minikube\profiles\minikube\apiserver.key.7fb57e3c ...
I0614 12:08:11.449146   18372 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\apiserver.key.7fb57e3c: {Name:mkbd3b2b022799a9d09233b6a74346ff08517ef7 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0614 12:08:11.449146   18372 certs.go:381] copying C:\Users\Admin\.minikube\profiles\minikube\apiserver.crt.7fb57e3c -> C:\Users\Admin\.minikube\profiles\minikube\apiserver.crt
I0614 12:08:11.457323   18372 certs.go:385] copying C:\Users\Admin\.minikube\profiles\minikube\apiserver.key.7fb57e3c -> C:\Users\Admin\.minikube\profiles\minikube\apiserver.key
I0614 12:08:11.458723   18372 certs.go:363] generating signed profile cert for "aggregator": C:\Users\Admin\.minikube\profiles\minikube\proxy-client.key
I0614 12:08:11.458723   18372 crypto.go:68] Generating cert C:\Users\Admin\.minikube\profiles\minikube\proxy-client.crt with IP's: []
I0614 12:08:11.714864   18372 crypto.go:156] Writing cert to C:\Users\Admin\.minikube\profiles\minikube\proxy-client.crt ...
I0614 12:08:11.714864   18372 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\proxy-client.crt: {Name:mkd0d3d704bf47593c31d5db0d04c924b85a356b Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0614 12:08:11.715376   18372 crypto.go:164] Writing key to C:\Users\Admin\.minikube\profiles\minikube\proxy-client.key ...
I0614 12:08:11.715376   18372 lock.go:35] WriteFile acquiring C:\Users\Admin\.minikube\profiles\minikube\proxy-client.key: {Name:mk853d6c20d707b9da5bd6f6e87e12f6abb34163 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0614 12:08:11.721949   18372 certs.go:484] found cert: C:\Users\Admin\.minikube\certs\ca-key.pem (1675 bytes)
I0614 12:08:11.721949   18372 certs.go:484] found cert: C:\Users\Admin\.minikube\certs\ca.pem (1074 bytes)
I0614 12:08:11.722941   18372 certs.go:484] found cert: C:\Users\Admin\.minikube\certs\cert.pem (1119 bytes)
I0614 12:08:11.722941   18372 certs.go:484] found cert: C:\Users\Admin\.minikube\certs\key.pem (1675 bytes)
I0614 12:08:11.723444   18372 ssh_runner.go:362] scp C:\Users\Admin\.minikube\ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0614 12:08:11.740957   18372 ssh_runner.go:362] scp C:\Users\Admin\.minikube\ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0614 12:08:11.758663   18372 ssh_runner.go:362] scp C:\Users\Admin\.minikube\proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0614 12:08:11.775714   18372 ssh_runner.go:362] scp C:\Users\Admin\.minikube\proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0614 12:08:11.806270   18372 ssh_runner.go:362] scp C:\Users\Admin\.minikube\profiles\minikube\apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0614 12:08:11.827652   18372 ssh_runner.go:362] scp C:\Users\Admin\.minikube\profiles\minikube\apiserver.key --> /var/lib/minikube/certs/apiserver.key (1675 bytes)
I0614 12:08:11.846239   18372 ssh_runner.go:362] scp C:\Users\Admin\.minikube\profiles\minikube\proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0614 12:08:11.863420   18372 ssh_runner.go:362] scp C:\Users\Admin\.minikube\profiles\minikube\proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1675 bytes)
I0614 12:08:11.880808   18372 ssh_runner.go:362] scp C:\Users\Admin\.minikube\ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0614 12:08:11.899542   18372 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (740 bytes)
I0614 12:08:11.918196   18372 ssh_runner.go:195] Run: openssl version
I0614 12:08:11.929405   18372 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0614 12:08:11.944098   18372 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0614 12:08:11.947780   18372 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Jun 12 17:37 /usr/share/ca-certificates/minikubeCA.pem
I0614 12:08:11.952686   18372 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0614 12:08:11.958975   18372 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0614 12:08:11.971960   18372 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0614 12:08:11.975562   18372 certs.go:399] 'apiserver-kubelet-client' cert doesn't exist, likely first start: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt: Process exited with status 1
stdout:

stderr:
stat: cannot statx '/var/lib/minikube/certs/apiserver-kubelet-client.crt': No such file or directory
I0614 12:08:11.975562   18372 kubeadm.go:392] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b Memory:4000 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Admin:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0614 12:08:11.978493   18372 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0614 12:08:11.994495   18372 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0614 12:08:12.003071   18372 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0614 12:08:12.011169   18372 kubeadm.go:214] ignoring SystemVerification for kubeadm because of docker driver
I0614 12:08:12.011169   18372 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0614 12:08:12.019324   18372 kubeadm.go:155] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0614 12:08:12.019324   18372 kubeadm.go:157] found existing configuration files:

I0614 12:08:12.019844   18372 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0614 12:08:12.026909   18372 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I0614 12:08:12.027852   18372 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I0614 12:08:12.035670   18372 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0614 12:08:12.042612   18372 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I0614 12:08:12.043145   18372 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I0614 12:08:12.050969   18372 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0614 12:08:12.058482   18372 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I0614 12:08:12.059004   18372 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0614 12:08:12.067122   18372 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0614 12:08:12.073942   18372 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I0614 12:08:12.074452   18372 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0614 12:08:12.081355   18372 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.33.1:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0614 12:08:12.122638   18372 kubeadm.go:310] 	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
I0614 12:08:12.164458   18372 kubeadm.go:310] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0614 12:08:20.212826   18372 kubeadm.go:310] [init] Using Kubernetes version: v1.33.1
I0614 12:08:20.212826   18372 kubeadm.go:310] [preflight] Running pre-flight checks
I0614 12:08:20.212826   18372 kubeadm.go:310] [preflight] Pulling images required for setting up a Kubernetes cluster
I0614 12:08:20.212826   18372 kubeadm.go:310] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0614 12:08:20.213347   18372 kubeadm.go:310] [preflight] You can also perform this action beforehand using 'kubeadm config images pull'
I0614 12:08:20.213347   18372 kubeadm.go:310] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0614 12:08:20.213871   18372 out.go:235]     ▪ Generando certificados y llaves
I0614 12:08:20.213871   18372 kubeadm.go:310] [certs] Using existing ca certificate authority
I0614 12:08:20.213871   18372 kubeadm.go:310] [certs] Using existing apiserver certificate and key on disk
I0614 12:08:20.214384   18372 kubeadm.go:310] [certs] Generating "apiserver-kubelet-client" certificate and key
I0614 12:08:20.214384   18372 kubeadm.go:310] [certs] Generating "front-proxy-ca" certificate and key
I0614 12:08:20.214384   18372 kubeadm.go:310] [certs] Generating "front-proxy-client" certificate and key
I0614 12:08:20.214384   18372 kubeadm.go:310] [certs] Generating "etcd/ca" certificate and key
I0614 12:08:20.214384   18372 kubeadm.go:310] [certs] Generating "etcd/server" certificate and key
I0614 12:08:20.214384   18372 kubeadm.go:310] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0614 12:08:20.214384   18372 kubeadm.go:310] [certs] Generating "etcd/peer" certificate and key
I0614 12:08:20.214384   18372 kubeadm.go:310] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0614 12:08:20.214938   18372 kubeadm.go:310] [certs] Generating "etcd/healthcheck-client" certificate and key
I0614 12:08:20.214938   18372 kubeadm.go:310] [certs] Generating "apiserver-etcd-client" certificate and key
I0614 12:08:20.214938   18372 kubeadm.go:310] [certs] Generating "sa" key and public key
I0614 12:08:20.214938   18372 kubeadm.go:310] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0614 12:08:20.214938   18372 kubeadm.go:310] [kubeconfig] Writing "admin.conf" kubeconfig file
I0614 12:08:20.214938   18372 kubeadm.go:310] [kubeconfig] Writing "super-admin.conf" kubeconfig file
I0614 12:08:20.214938   18372 kubeadm.go:310] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0614 12:08:20.214938   18372 kubeadm.go:310] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0614 12:08:20.214938   18372 kubeadm.go:310] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0614 12:08:20.215448   18372 kubeadm.go:310] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0614 12:08:20.215448   18372 kubeadm.go:310] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0614 12:08:20.217027   18372 out.go:235]     ▪ Iniciando plano de control
I0614 12:08:20.217544   18372 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0614 12:08:20.217544   18372 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0614 12:08:20.217544   18372 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0614 12:08:20.217544   18372 kubeadm.go:310] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0614 12:08:20.217544   18372 kubeadm.go:310] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0614 12:08:20.217544   18372 kubeadm.go:310] [kubelet-start] Starting the kubelet
I0614 12:08:20.218065   18372 kubeadm.go:310] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
I0614 12:08:20.218065   18372 kubeadm.go:310] [kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
I0614 12:08:20.218065   18372 kubeadm.go:310] [kubelet-check] The kubelet is healthy after 1.000756716s
I0614 12:08:20.218065   18372 kubeadm.go:310] [control-plane-check] Waiting for healthy control plane components. This can take up to 4m0s
I0614 12:08:20.218065   18372 kubeadm.go:310] [control-plane-check] Checking kube-apiserver at https://192.168.49.2:8443/livez
I0614 12:08:20.218582   18372 kubeadm.go:310] [control-plane-check] Checking kube-controller-manager at https://127.0.0.1:10257/healthz
I0614 12:08:20.218582   18372 kubeadm.go:310] [control-plane-check] Checking kube-scheduler at https://127.0.0.1:10259/livez
I0614 12:08:20.218582   18372 kubeadm.go:310] [control-plane-check] kube-controller-manager is healthy after 1.503614692s
I0614 12:08:20.218582   18372 kubeadm.go:310] [control-plane-check] kube-scheduler is healthy after 2.41276995s
I0614 12:08:20.218582   18372 kubeadm.go:310] [control-plane-check] kube-apiserver is healthy after 4.002583962s
I0614 12:08:20.219099   18372 kubeadm.go:310] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0614 12:08:20.219099   18372 kubeadm.go:310] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0614 12:08:20.219099   18372 kubeadm.go:310] [upload-certs] Skipping phase. Please see --upload-certs
I0614 12:08:20.219099   18372 kubeadm.go:310] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0614 12:08:20.219099   18372 kubeadm.go:310] [bootstrap-token] Using token: 6n77bc.5i2i12m478zryh7h
I0614 12:08:20.221171   18372 out.go:235]     ▪ Configurando reglas RBAC...
I0614 12:08:20.221171   18372 kubeadm.go:310] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0614 12:08:20.221171   18372 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0614 12:08:20.221171   18372 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0614 12:08:20.221714   18372 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0614 12:08:20.221714   18372 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0614 12:08:20.221714   18372 kubeadm.go:310] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0614 12:08:20.221714   18372 kubeadm.go:310] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0614 12:08:20.221714   18372 kubeadm.go:310] [addons] Applied essential addon: CoreDNS
I0614 12:08:20.222233   18372 kubeadm.go:310] [addons] Applied essential addon: kube-proxy
I0614 12:08:20.222233   18372 kubeadm.go:310] 
I0614 12:08:20.222233   18372 kubeadm.go:310] Your Kubernetes control-plane has initialized successfully!
I0614 12:08:20.222233   18372 kubeadm.go:310] 
I0614 12:08:20.222233   18372 kubeadm.go:310] To start using your cluster, you need to run the following as a regular user:
I0614 12:08:20.222233   18372 kubeadm.go:310] 
I0614 12:08:20.222233   18372 kubeadm.go:310]   mkdir -p $HOME/.kube
I0614 12:08:20.222233   18372 kubeadm.go:310]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0614 12:08:20.222233   18372 kubeadm.go:310]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0614 12:08:20.222233   18372 kubeadm.go:310] 
I0614 12:08:20.222233   18372 kubeadm.go:310] Alternatively, if you are the root user, you can run:
I0614 12:08:20.222233   18372 kubeadm.go:310] 
I0614 12:08:20.222233   18372 kubeadm.go:310]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0614 12:08:20.222233   18372 kubeadm.go:310] 
I0614 12:08:20.222233   18372 kubeadm.go:310] You should now deploy a pod network to the cluster.
I0614 12:08:20.222758   18372 kubeadm.go:310] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0614 12:08:20.222758   18372 kubeadm.go:310]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0614 12:08:20.222758   18372 kubeadm.go:310] 
I0614 12:08:20.222758   18372 kubeadm.go:310] You can now join any number of control-plane nodes by copying certificate authorities
I0614 12:08:20.222758   18372 kubeadm.go:310] and service account keys on each node and then running the following as root:
I0614 12:08:20.222758   18372 kubeadm.go:310] 
I0614 12:08:20.222758   18372 kubeadm.go:310]   kubeadm join control-plane.minikube.internal:8443 --token 6n77bc.5i2i12m478zryh7h \
I0614 12:08:20.223272   18372 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:653bc12b37c0b3302431b23bd8bf267c7e39c01de3cd67cac6a83db55417433c \
I0614 12:08:20.223272   18372 kubeadm.go:310] 	--control-plane 
I0614 12:08:20.223272   18372 kubeadm.go:310] 
I0614 12:08:20.223272   18372 kubeadm.go:310] Then you can join any number of worker nodes by running the following on each as root:
I0614 12:08:20.223272   18372 kubeadm.go:310] 
I0614 12:08:20.223272   18372 kubeadm.go:310] kubeadm join control-plane.minikube.internal:8443 --token 6n77bc.5i2i12m478zryh7h \
I0614 12:08:20.223272   18372 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:653bc12b37c0b3302431b23bd8bf267c7e39c01de3cd67cac6a83db55417433c 
I0614 12:08:20.223272   18372 cni.go:84] Creating CNI manager for ""
I0614 12:08:20.223272   18372 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0614 12:08:20.223793   18372 out.go:177] 🔗  Configurando CNI bridge CNI ...
I0614 12:08:20.226513   18372 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0614 12:08:20.236707   18372 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (496 bytes)
I0614 12:08:20.253746   18372 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0614 12:08:20.254269   18372 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.33.1/kubectl --kubeconfig=/var/lib/minikube/kubeconfig label --overwrite nodes minikube minikube.k8s.io/updated_at=2025_06_14T12_08_20_0700 minikube.k8s.io/version=v1.36.0 minikube.k8s.io/commit=f8f52f5de11fc6ad8244afac475e1d0f96841df1-dirty minikube.k8s.io/name=minikube minikube.k8s.io/primary=true
I0614 12:08:20.254781   18372 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.33.1/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0614 12:08:20.264154   18372 ops.go:34] apiserver oom_adj: -16
I0614 12:08:20.325328   18372 kubeadm.go:1105] duration metric: took 71.5814ms to wait for elevateKubeSystemPrivileges
I0614 12:08:20.325328   18372 kubeadm.go:394] duration metric: took 8.3497654s to StartCluster
I0614 12:08:20.325328   18372 settings.go:142] acquiring lock: {Name:mk98c2b42cbe328c01bb9ae373473b3510453e13 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0614 12:08:20.325328   18372 settings.go:150] Updating kubeconfig:  C:\Users\Admin\.kube\config
I0614 12:08:20.326389   18372 lock.go:35] WriteFile acquiring C:\Users\Admin\.kube\config: {Name:mkf7aec4d5b965fcb5c1a81a29d2d073d13fd4cc Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0614 12:08:20.326917   18372 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.33.1/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0614 12:08:20.326917   18372 start.go:235] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}
I0614 12:08:20.327436   18372 addons.go:511] enable addons start: toEnable=map[ambassador:false amd-gpu-device-plugin:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volcano:false volumesnapshots:false yakd:false]
I0614 12:08:20.327436   18372 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0614 12:08:20.327436   18372 addons.go:238] Setting addon storage-provisioner=true in "minikube"
I0614 12:08:20.327436   18372 host.go:66] Checking if "minikube" exists ...
I0614 12:08:20.327436   18372 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0614 12:08:20.327436   18372 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0614 12:08:20.327436   18372 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.33.1
I0614 12:08:20.329024   18372 out.go:177] 🔎  Verifying Kubernetes components...
I0614 12:08:20.332790   18372 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0614 12:08:20.334811   18372 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0614 12:08:20.335324   18372 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0614 12:08:20.381547   18372 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0614 12:08:20.382066   18372 addons.go:435] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0614 12:08:20.382066   18372 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0614 12:08:20.385280   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:20.392765   18372 addons.go:238] Setting addon default-storageclass=true in "minikube"
I0614 12:08:20.393303   18372 host.go:66] Checking if "minikube" exists ...
I0614 12:08:20.403424   18372 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0614 12:08:20.413285   18372 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.33.1/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.254 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.33.1/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0614 12:08:20.431690   18372 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55146 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0614 12:08:20.434327   18372 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0614 12:08:20.441748   18372 addons.go:435] installing /etc/kubernetes/addons/storageclass.yaml
I0614 12:08:20.441748   18372 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0614 12:08:20.443896   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0614 12:08:20.472911   18372 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55146 SSHKeyPath:C:\Users\Admin\.minikube\machines\minikube\id_rsa Username:docker}
I0614 12:08:20.806301   18372 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.33.1/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0614 12:08:20.809573   18372 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.33.1/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0614 12:08:20.826091   18372 start.go:971] {"host.minikube.internal": 192.168.65.254} host record injected into CoreDNS's ConfigMap
I0614 12:08:20.829242   18372 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0614 12:08:20.860238   18372 api_server.go:52] waiting for apiserver process to appear ...
I0614 12:08:20.860760   18372 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0614 12:08:21.103671   18372 api_server.go:72] duration metric: took 776.7539ms to wait for apiserver process to appear ...
I0614 12:08:21.103671   18372 api_server.go:88] waiting for apiserver healthz status ...
I0614 12:08:21.103671   18372 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:55150/healthz ...
I0614 12:08:21.108979   18372 api_server.go:279] https://127.0.0.1:55150/healthz returned 200:
ok
I0614 12:08:21.110029   18372 api_server.go:141] control plane version: v1.33.1
I0614 12:08:21.110029   18372 api_server.go:131] duration metric: took 6.3585ms to wait for apiserver health ...
I0614 12:08:21.110029   18372 system_pods.go:43] waiting for kube-system pods to appear ...
I0614 12:08:21.110551   18372 out.go:177] 🌟  Complementos habilitados: storage-provisioner, default-storageclass
I0614 12:08:21.112272   18372 system_pods.go:59] 5 kube-system pods found
I0614 12:08:21.112272   18372 system_pods.go:61] "etcd-minikube" [75b42495-6278-41ac-abf7-f6483a6585ae] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0614 12:08:21.112272   18372 system_pods.go:61] "kube-apiserver-minikube" [c822eacb-8ea3-48c0-9bc5-610dda6ece69] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0614 12:08:21.112272   18372 system_pods.go:61] "kube-controller-manager-minikube" [0e1cecc4-025b-4045-ba77-1b51ed033b66] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0614 12:08:21.112272   18372 system_pods.go:61] "kube-scheduler-minikube" [7c909957-fd7a-469b-8131-a31606456ee9] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0614 12:08:21.112272   18372 system_pods.go:61] "storage-provisioner" [0a578a05-c276-4b63-a6de-bcd936475928] Pending
I0614 12:08:21.112272   18372 system_pods.go:74] duration metric: took 2.2434ms to wait for pod list to return data ...
I0614 12:08:21.112272   18372 kubeadm.go:578] duration metric: took 785.3558ms to wait for: map[apiserver:true system_pods:true]
I0614 12:08:21.112272   18372 node_conditions.go:102] verifying NodePressure condition ...
I0614 12:08:21.112272   18372 addons.go:514] duration metric: took 784.8366ms for enable addons: enabled=[storage-provisioner default-storageclass]
I0614 12:08:21.114379   18372 node_conditions.go:122] node storage ephemeral capacity is 1055762868Ki
I0614 12:08:21.114379   18372 node_conditions.go:123] node cpu capacity is 12
I0614 12:08:21.114379   18372 node_conditions.go:105] duration metric: took 2.107ms to run NodePressure ...
I0614 12:08:21.114379   18372 start.go:241] waiting for startup goroutines ...
I0614 12:08:21.329765   18372 kapi.go:214] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0614 12:08:21.329765   18372 start.go:246] waiting for cluster config update ...
I0614 12:08:21.329765   18372 start.go:255] writing updated cluster config ...
I0614 12:08:21.335552   18372 ssh_runner.go:195] Run: rm -f paused
I0614 12:08:21.428425   18372 start.go:607] kubectl: 1.33.1, cluster: 1.33.1 (minor skew: 0)
I0614 12:08:21.429968   18372 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


==> Docker <==
Jun 14 10:08:06 minikube dockerd[1028]: time="2025-06-14T10:08:06.427884971Z" level=info msg="Creating a containerd client" address=/run/containerd/containerd.sock timeout=1m0s
Jun 14 10:08:06 minikube dockerd[1028]: time="2025-06-14T10:08:06.447131326Z" level=info msg="[graphdriver] using prior storage driver: overlay2"
Jun 14 10:08:06 minikube dockerd[1028]: time="2025-06-14T10:08:06.449548334Z" level=info msg="Loading containers: start."
Jun 14 10:08:06 minikube dockerd[1028]: time="2025-06-14T10:08:06.636273192Z" level=info msg="Processing signal 'terminated'"
Jun 14 10:08:07 minikube dockerd[1028]: time="2025-06-14T10:08:07.685189402Z" level=warning msg="Error (Unable to complete atomic operation, key modified) deleting object [endpoint_count 0636bffc6d72c84427a39c1d2ce855eb8b1ef6fec713f392b0bbc1209670381a], retrying...."
Jun 14 10:08:07 minikube dockerd[1028]: time="2025-06-14T10:08:07.723207093Z" level=info msg="Loading containers: done."
Jun 14 10:08:07 minikube dockerd[1028]: time="2025-06-14T10:08:07.735477590Z" level=info msg="Docker daemon" commit=01f442b containerd-snapshotter=false storage-driver=overlay2 version=28.1.1
Jun 14 10:08:07 minikube dockerd[1028]: time="2025-06-14T10:08:07.735546850Z" level=info msg="Initializing buildkit"
Jun 14 10:08:07 minikube dockerd[1028]: time="2025-06-14T10:08:07.752714498Z" level=info msg="Completed buildkit initialization"
Jun 14 10:08:07 minikube dockerd[1028]: time="2025-06-14T10:08:07.755262529Z" level=info msg="Daemon has completed initialization"
Jun 14 10:08:07 minikube dockerd[1028]: time="2025-06-14T10:08:07.755329051Z" level=info msg="API listen on /var/run/docker.sock"
Jun 14 10:08:07 minikube dockerd[1028]: time="2025-06-14T10:08:07.755369696Z" level=info msg="API listen on [::]:2376"
Jun 14 10:08:07 minikube dockerd[1028]: time="2025-06-14T10:08:07.756203043Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Jun 14 10:08:07 minikube dockerd[1028]: time="2025-06-14T10:08:07.757246238Z" level=info msg="Daemon shutdown complete"
Jun 14 10:08:07 minikube dockerd[1028]: time="2025-06-14T10:08:07.757293441Z" level=info msg="stopping event stream following graceful shutdown" error="context canceled" module=libcontainerd namespace=plugins.moby
Jun 14 10:08:07 minikube systemd[1]: docker.service: Deactivated successfully.
Jun 14 10:08:07 minikube systemd[1]: Stopped Docker Application Container Engine.
Jun 14 10:08:07 minikube systemd[1]: Starting Docker Application Container Engine...
Jun 14 10:08:07 minikube dockerd[1337]: time="2025-06-14T10:08:07.818908642Z" level=info msg="Starting up"
Jun 14 10:08:07 minikube dockerd[1337]: time="2025-06-14T10:08:07.819667979Z" level=info msg="OTEL tracing is not configured, using no-op tracer provider"
Jun 14 10:08:07 minikube dockerd[1337]: time="2025-06-14T10:08:07.827650835Z" level=info msg="Creating a containerd client" address=/run/containerd/containerd.sock timeout=1m0s
Jun 14 10:08:07 minikube dockerd[1337]: time="2025-06-14T10:08:07.836908580Z" level=info msg="[graphdriver] trying configured driver: overlay2"
Jun 14 10:08:07 minikube dockerd[1337]: time="2025-06-14T10:08:07.876489066Z" level=info msg="Loading containers: start."
Jun 14 10:08:08 minikube dockerd[1337]: time="2025-06-14T10:08:08.875549323Z" level=warning msg="Error (Unable to complete atomic operation, key modified) deleting object [endpoint_count 6542b651ce35d07c28eb32836e057bdac93b73257912a0c99b9c14b2a671d429], retrying...."
Jun 14 10:08:08 minikube dockerd[1337]: time="2025-06-14T10:08:08.916301207Z" level=info msg="Loading containers: done."
Jun 14 10:08:08 minikube dockerd[1337]: time="2025-06-14T10:08:08.927273021Z" level=info msg="Docker daemon" commit=01f442b containerd-snapshotter=false storage-driver=overlay2 version=28.1.1
Jun 14 10:08:08 minikube dockerd[1337]: time="2025-06-14T10:08:08.927327757Z" level=info msg="Initializing buildkit"
Jun 14 10:08:08 minikube dockerd[1337]: time="2025-06-14T10:08:08.942574779Z" level=info msg="Completed buildkit initialization"
Jun 14 10:08:08 minikube dockerd[1337]: time="2025-06-14T10:08:08.946269678Z" level=info msg="Daemon has completed initialization"
Jun 14 10:08:08 minikube dockerd[1337]: time="2025-06-14T10:08:08.946384238Z" level=info msg="API listen on /var/run/docker.sock"
Jun 14 10:08:08 minikube dockerd[1337]: time="2025-06-14T10:08:08.946390888Z" level=info msg="API listen on [::]:2376"
Jun 14 10:08:08 minikube systemd[1]: Started Docker Application Container Engine.
Jun 14 10:08:09 minikube systemd[1]: Starting CRI Interface for Docker Application Container Engine...
Jun 14 10:08:09 minikube cri-dockerd[1648]: time="2025-06-14T10:08:09Z" level=info msg="Starting cri-dockerd dev (HEAD)"
Jun 14 10:08:09 minikube cri-dockerd[1648]: time="2025-06-14T10:08:09Z" level=info msg="Connecting to docker on the Endpoint unix:///var/run/docker.sock"
Jun 14 10:08:09 minikube cri-dockerd[1648]: time="2025-06-14T10:08:09Z" level=info msg="Start docker client with request timeout 0s"
Jun 14 10:08:09 minikube cri-dockerd[1648]: time="2025-06-14T10:08:09Z" level=info msg="Hairpin mode is set to hairpin-veth"
Jun 14 10:08:09 minikube cri-dockerd[1648]: time="2025-06-14T10:08:09Z" level=info msg="Loaded network plugin cni"
Jun 14 10:08:09 minikube cri-dockerd[1648]: time="2025-06-14T10:08:09Z" level=info msg="Docker cri networking managed by network plugin cni"
Jun 14 10:08:09 minikube cri-dockerd[1648]: time="2025-06-14T10:08:09Z" level=info msg="Setting cgroupDriver cgroupfs"
Jun 14 10:08:09 minikube cri-dockerd[1648]: time="2025-06-14T10:08:09Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
Jun 14 10:08:09 minikube cri-dockerd[1648]: time="2025-06-14T10:08:09Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
Jun 14 10:08:09 minikube cri-dockerd[1648]: time="2025-06-14T10:08:09Z" level=info msg="Start cri-dockerd grpc backend"
Jun 14 10:08:09 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
Jun 14 10:08:15 minikube cri-dockerd[1648]: time="2025-06-14T10:08:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/f2e944d4de3f507c7dc44c9dd454c7e3bdcb552ec6be11841de269140d26bac9/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Jun 14 10:08:15 minikube cri-dockerd[1648]: time="2025-06-14T10:08:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/d0f4c03d4aee0666e35315876f63fc6fa413d8b54d5144b6e36fae9f959de024/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Jun 14 10:08:15 minikube cri-dockerd[1648]: time="2025-06-14T10:08:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/51d4484f7739f439ebabea6596d10518acf69e7190dc50e39da4dc24d89f4e99/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Jun 14 10:08:15 minikube cri-dockerd[1648]: time="2025-06-14T10:08:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/89cde4dad0ac98a6d24c436e276dce3e976b291e43397fccaaf058bd77fe766f/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Jun 14 10:08:24 minikube cri-dockerd[1648]: time="2025-06-14T10:08:24Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/7860226e591bac930b465de9cc33767aad967ad785e198fe2ec08051ecd48796/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Jun 14 10:08:25 minikube cri-dockerd[1648]: time="2025-06-14T10:08:25Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/f80d6e2e2bee47823e29623eaf4f0c6b12d78c305f77b7bde3b367af5f995941/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Jun 14 10:08:25 minikube cri-dockerd[1648]: time="2025-06-14T10:08:25Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/7238f20849c8f7570332afbe29f12814ada955347c55b5dd0b95cd283caa7f02/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Jun 14 10:08:29 minikube cri-dockerd[1648]: time="2025-06-14T10:08:29Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"
Jun 14 10:08:45 minikube dockerd[1337]: time="2025-06-14T10:08:45.882297766Z" level=info msg="ignoring event" container=8199374467a762712fa1de47a91622a10a327d96b1ea402592440cf5afe7a48d module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Jun 14 10:09:26 minikube cri-dockerd[1648]: time="2025-06-14T10:09:26Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/2d15fb0db0e589518d8f80e171192ce9770691ae0a09dcee8691a887a41d8ee0/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Jun 14 10:09:27 minikube dockerd[1337]: time="2025-06-14T10:09:27.596461037Z" level=error msg="Not continuing with pull after error" error="errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Jun 14 10:09:27 minikube dockerd[1337]: time="2025-06-14T10:09:27.596613031Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 14 10:09:40 minikube dockerd[1337]: time="2025-06-14T10:09:40.906311740Z" level=error msg="Not continuing with pull after error" error="errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Jun 14 10:09:40 minikube dockerd[1337]: time="2025-06-14T10:09:40.906416411Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Jun 14 10:10:04 minikube dockerd[1337]: time="2025-06-14T10:10:04.881191785Z" level=error msg="Not continuing with pull after error" error="errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Jun 14 10:10:04 minikube dockerd[1337]: time="2025-06-14T10:10:04.881252357Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"


==> container status <==
CONTAINER           IMAGE               CREATED              STATE               NAME                      ATTEMPT             POD ID              POD
19895c0b8cc60       6e38f40d628db       About a minute ago   Running             storage-provisioner       1                   7860226e591ba       storage-provisioner
498c6e59e5286       1cf5f116067c6       About a minute ago   Running             coredns                   0                   7238f20849c8f       coredns-674b8bbfcf-hfx6p
e9a5f1294769c       b79c189b052cd       About a minute ago   Running             kube-proxy                0                   f80d6e2e2bee4       kube-proxy-xrglr
8199374467a76       6e38f40d628db       About a minute ago   Exited              storage-provisioner       0                   7860226e591ba       storage-provisioner
815c5f0fdeb70       ef43894fa110c       About a minute ago   Running             kube-controller-manager   0                   89cde4dad0ac9       kube-controller-manager-minikube
ea10bff984052       398c985c0d950       About a minute ago   Running             kube-scheduler            0                   51d4484f7739f       kube-scheduler-minikube
c6b331b713a8b       c6ab243b29f82       About a minute ago   Running             kube-apiserver            0                   d0f4c03d4aee0       kube-apiserver-minikube
3fbf5b65f0bc4       499038711c081       About a minute ago   Running             etcd                      0                   f2e944d4de3f5       etcd-minikube


==> coredns [498c6e59e528] <==
maxprocs: Leaving GOMAXPROCS=12: CPU quota undefined
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[WARNING] plugin/kubernetes: starting server with unsynced Kubernetes API
.:53
[INFO] plugin/reload: Running configuration SHA512 = e7e8a6c4578bf29b9f453cb54ade3fb14671793481527b7435e35119b25e84eb3a79242b1f470199f8605ace441674db8f1b6715b77448c20dde63e2dc5d2169
CoreDNS-1.12.0
linux/amd64, go1.23.3, 51e11f1
[INFO] 127.0.0.1:34704 - 15676 "HINFO IN 5980163043134913051.6189674172668302285. udp 57 false 512" NXDOMAIN qr,rd,ra 57 0.026892765s
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.31.2/tools/cache/reflector.go:243: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: connect: connection refused
[ERROR] plugin/kubernetes: Unhandled Error
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.31.2/tools/cache/reflector.go:243: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: connect: connection refused
[ERROR] plugin/kubernetes: Unhandled Error
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.31.2/tools/cache/reflector.go:243: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: connect: connection refused
[ERROR] plugin/kubernetes: Unhandled Error


==> describe nodes <==
Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=f8f52f5de11fc6ad8244afac475e1d0f96841df1-dirty
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2025_06_14T12_08_20_0700
                    minikube.k8s.io/version=v1.36.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Sat, 14 Jun 2025 10:08:17 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Sat, 14 Jun 2025 10:10:00 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Sat, 14 Jun 2025 10:08:29 +0000   Sat, 14 Jun 2025 10:08:15 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Sat, 14 Jun 2025 10:08:29 +0000   Sat, 14 Jun 2025 10:08:15 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Sat, 14 Jun 2025 10:08:29 +0000   Sat, 14 Jun 2025 10:08:15 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Sat, 14 Jun 2025 10:08:29 +0000   Sat, 14 Jun 2025 10:08:17 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                12
  ephemeral-storage:  1055762868Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             8017112Ki
  pods:               110
Allocatable:
  cpu:                12
  ephemeral-storage:  1055762868Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             8017112Ki
  pods:               110
System Info:
  Machine ID:                 bf32051d2c6f4f40b078dde4c561442b
  System UUID:                bf32051d2c6f4f40b078dde4c561442b
  Boot ID:                    b30c49a0-abd1-4f3e-b0ff-e4907b841825
  Kernel Version:             6.6.87.1-microsoft-standard-WSL2
  OS Image:                   Ubuntu 22.04.5 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://28.1.1
  Kubelet Version:            v1.33.1
  Kube-Proxy Version:         
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (8 in total)
  Namespace                   Name                                   CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                   ------------  ----------  ---------------  -------------  ---
  default                     fastapi-deployment-76c4c664bc-m56nx    0 (0%)        0 (0%)      0 (0%)           0 (0%)         42s
  kube-system                 coredns-674b8bbfcf-hfx6p               100m (0%)     0 (0%)      70Mi (0%)        170Mi (2%)     103s
  kube-system                 etcd-minikube                          100m (0%)     0 (0%)      100Mi (1%)       0 (0%)         109s
  kube-system                 kube-apiserver-minikube                250m (2%)     0 (0%)      0 (0%)           0 (0%)         108s
  kube-system                 kube-controller-manager-minikube       200m (1%)     0 (0%)      0 (0%)           0 (0%)         109s
  kube-system                 kube-proxy-xrglr                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         103s
  kube-system                 kube-scheduler-minikube                100m (0%)     0 (0%)      0 (0%)           0 (0%)         109s
  kube-system                 storage-provisioner                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         106s
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (6%)   0 (0%)
  memory             170Mi (2%)  170Mi (2%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-1Gi      0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type    Reason                   Age   From             Message
  ----    ------                   ----  ----             -------
  Normal  Starting                 101s  kube-proxy       
  Normal  Starting                 108s  kubelet          Starting kubelet.
  Normal  NodeAllocatableEnforced  108s  kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  108s  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    108s  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     108s  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  RegisteredNode           103s  node-controller  Node minikube event: Registered Node minikube in Controller


==> dmesg <==
[Jun14 09:54] Hyper-V: Disabling IBT because of Hyper-V bug
[  +0.021156] PCI: Fatal: No config space access function found
[  +0.023425] PCI: System does not support PCI
[  +0.065440] device-mapper: core: CONFIG_IMA_DISABLE_HTABLE is disabled. Duplicate IMA measurements will not be recorded in the IMA log.
[  +2.523229] WSL (1 - init(docker-desktop)) ERROR: ConfigApplyWindowsLibPath:2119: open /etc/ld.so.conf.d/ld.wsl.conf failed 2
[  +0.013415] WSL (1 - init(docker-desktop)) WARNING: /usr/share/zoneinfo/Europe/Madrid not found. Is the tzdata package installed?
[  +0.163738] pulseaudio[277]: memfd_create() called without MFD_EXEC or MFD_NOEXEC_SEAL set
[  +0.211408] misc dxg: dxgk: dxgkio_is_feature_enabled: Ioctl failed: -22
[  +0.003834] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000878] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000483] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000592] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +1.433717] netlink: 'init': attribute type 4 has an invalid length.
[  +2.394066] WSL (240) ERROR: CheckConnection: getaddrinfo() failed: -5


==> etcd [3fbf5b65f0bc] <==
{"level":"warn","ts":"2025-06-14T10:08:15.493810Z","caller":"embed/config.go:689","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"warn","ts":"2025-06-14T10:08:15.494174Z","caller":"etcdmain/config.go:389","msg":"--proxy-refresh-interval is deprecated in 3.5 and will be decommissioned in 3.6."}
{"level":"info","ts":"2025-06-14T10:08:15.494261Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"warn","ts":"2025-06-14T10:08:15.494745Z","caller":"embed/config.go:689","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2025-06-14T10:08:15.494791Z","caller":"embed/etcd.go:140","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2025-06-14T10:08:15.494840Z","caller":"embed/etcd.go:528","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-06-14T10:08:15.495588Z","caller":"embed/etcd.go:148","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2025-06-14T10:08:15.495741Z","caller":"embed/etcd.go:323","msg":"starting an etcd server","etcd-version":"3.5.21","git-sha":"a17edfd","go-version":"go1.23.7","go-os":"linux","go-arch":"amd64","max-cpu-set":12,"max-cpu-available":12,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2025-06-14T10:08:15.506728Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"10.223162ms"}
{"level":"info","ts":"2025-06-14T10:08:15.594223Z","caller":"etcdserver/raft.go:506","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2025-06-14T10:08:15.594382Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2025-06-14T10:08:15.594853Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2025-06-14T10:08:15.594945Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2025-06-14T10:08:15.594969Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2025-06-14T10:08:15.595213Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2025-06-14T10:08:15.690991Z","caller":"auth/store.go:1241","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2025-06-14T10:08:15.696001Z","caller":"mvcc/kvstore.go:425","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2025-06-14T10:08:15.696062Z","caller":"etcdserver/server.go:628","msg":"restore consistentIndex","index":0}
{"level":"info","ts":"2025-06-14T10:08:15.699101Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2025-06-14T10:08:15.702276Z","caller":"etcdserver/server.go:875","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.21","cluster-version":"to_be_decided"}
{"level":"info","ts":"2025-06-14T10:08:15.702633Z","caller":"etcdserver/server.go:759","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2025-06-14T10:08:15.702714Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2025-06-14T10:08:15.702814Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2025-06-14T10:08:15.702911Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2025-06-14T10:08:15.703036Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-06-14T10:08:15.703809Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2025-06-14T10:08:15.703887Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"],"added-peer-is-learner":false}
{"level":"info","ts":"2025-06-14T10:08:15.704318Z","caller":"embed/etcd.go:762","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-06-14T10:08:15.704449Z","caller":"embed/etcd.go:633","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2025-06-14T10:08:15.704489Z","caller":"embed/etcd.go:603","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2025-06-14T10:08:15.704536Z","caller":"embed/etcd.go:292","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2025-06-14T10:08:15.704556Z","caller":"embed/etcd.go:908","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2025-06-14T10:08:15.897801Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2025-06-14T10:08:15.897928Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2025-06-14T10:08:15.898014Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2025-06-14T10:08:15.898074Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2025-06-14T10:08:15.898188Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2025-06-14T10:08:15.898213Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2025-06-14T10:08:15.898232Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2025-06-14T10:08:15.901205Z","caller":"etcdserver/server.go:2697","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2025-06-14T10:08:15.902389Z","caller":"etcdserver/server.go:2144","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2025-06-14T10:08:15.902561Z","caller":"embed/serve.go:124","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-06-14T10:08:15.902599Z","caller":"embed/serve.go:124","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-06-14T10:08:15.902792Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2025-06-14T10:08:15.902829Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2025-06-14T10:08:15.903774Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-06-14T10:08:15.904916Z","caller":"membership/cluster.go:587","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2025-06-14T10:08:15.905097Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2025-06-14T10:08:15.905129Z","caller":"etcdserver/server.go:2721","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2025-06-14T10:08:15.905554Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-06-14T10:08:15.906890Z","caller":"embed/serve.go:275","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2025-06-14T10:08:15.907428Z","caller":"embed/serve.go:275","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}


==> kernel <==
 10:10:07 up 15 min,  0 users,  load average: 0.16, 0.22, 0.09
Linux minikube 6.6.87.1-microsoft-standard-WSL2 #1 SMP PREEMPT_DYNAMIC Mon Apr 21 17:08:54 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.5 LTS"


==> kube-apiserver [c6b331b713a8] <==
I0614 10:08:17.026782       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0614 10:08:17.026810       1 customresource_discovery_controller.go:294] Starting DiscoveryController
I0614 10:08:17.026840       1 controller.go:142] Starting OpenAPI controller
I0614 10:08:17.026854       1 controller.go:90] Starting OpenAPI V3 controller
I0614 10:08:17.026864       1 naming_controller.go:299] Starting NamingConditionController
I0614 10:08:17.026872       1 establishing_controller.go:81] Starting EstablishingController
I0614 10:08:17.026881       1 nonstructuralschema_controller.go:195] Starting NonStructuralSchemaConditionController
I0614 10:08:17.026894       1 apiapproval_controller.go:189] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0614 10:08:17.026903       1 crd_finalizer.go:269] Starting CRDFinalizer
I0614 10:08:17.026927       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0614 10:08:17.027411       1 dynamic_serving_content.go:135] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0614 10:08:17.027546       1 aggregator.go:169] waiting for initial CRD sync...
I0614 10:08:17.027586       1 system_namespaces_controller.go:66] Starting system namespaces controller
I0614 10:08:17.027980       1 crdregistration_controller.go:114] Starting crd-autoregister controller
I0614 10:08:17.027987       1 shared_informer.go:350] "Waiting for caches to sync" controller="crd-autoregister"
I0614 10:08:17.288036       1 shared_informer.go:357] "Caches are synced" controller="ipallocator-repair-controller"
I0614 10:08:17.288054       1 shared_informer.go:357] "Caches are synced" controller="cluster_authentication_trust_controller"
I0614 10:08:17.288104       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0614 10:08:17.288123       1 cache.go:39] Caches are synced for RemoteAvailability controller
I0614 10:08:17.288142       1 cache.go:39] Caches are synced for LocalAvailability controller
I0614 10:08:17.288181       1 handler_discovery.go:451] Starting ResourceDiscoveryManager
I0614 10:08:17.288201       1 shared_informer.go:357] "Caches are synced" controller="crd-autoregister"
I0614 10:08:17.288351       1 aggregator.go:171] initial CRD sync complete...
I0614 10:08:17.288450       1 autoregister_controller.go:144] Starting autoregister controller
I0614 10:08:17.288457       1 shared_informer.go:357] "Caches are synced" controller="node_authorizer"
I0614 10:08:17.288463       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0614 10:08:17.288489       1 cache.go:39] Caches are synced for autoregister controller
I0614 10:08:17.288509       1 shared_informer.go:357] "Caches are synced" controller="configmaps"
I0614 10:08:17.288402       1 shared_informer.go:357] "Caches are synced" controller="kubernetes-service-cidr-controller"
I0614 10:08:17.288512       1 apf_controller.go:382] Running API Priority and Fairness config worker
I0614 10:08:17.288668       1 apf_controller.go:385] Running API Priority and Fairness periodic rebalancing process
I0614 10:08:17.288569       1 default_servicecidr_controller.go:165] Creating default ServiceCIDR with CIDRs: [10.96.0.0/12]
I0614 10:08:17.288947       1 shared_informer.go:357] "Caches are synced" controller="*generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]"
I0614 10:08:17.289041       1 policy_source.go:240] refreshing policies
I0614 10:08:17.291789       1 controller.go:667] quota admission added evaluator for: namespaces
E0614 10:08:17.295080       1 controller.go:145] "Failed to ensure lease exists, will retry" err="namespaces \"kube-system\" not found" interval="200ms"
I0614 10:08:17.296410       1 default_servicecidr_controller.go:214] Setting default ServiceCIDR condition Ready to True
I0614 10:08:17.296470       1 cidrallocator.go:301] created ClusterIP allocator for Service CIDR 10.96.0.0/12
I0614 10:08:17.302839       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0614 10:08:17.303705       1 default_servicecidr_controller.go:136] Shutting down kubernetes-service-cidr-controller
I0614 10:08:17.498661       1 controller.go:667] quota admission added evaluator for: leases.coordination.k8s.io
I0614 10:08:18.034054       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0614 10:08:18.037307       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0614 10:08:18.037323       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0614 10:08:18.489275       1 controller.go:667] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0614 10:08:18.528777       1 controller.go:667] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0614 10:08:18.607179       1 alloc.go:328] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0614 10:08:18.614237       1 lease.go:265] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0614 10:08:18.615230       1 controller.go:667] quota admission added evaluator for: endpoints
I0614 10:08:18.620327       1 controller.go:667] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0614 10:08:19.093886       1 controller.go:667] quota admission added evaluator for: serviceaccounts
I0614 10:08:19.616547       1 controller.go:667] quota admission added evaluator for: deployments.apps
I0614 10:08:19.632052       1 alloc.go:328] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0614 10:08:19.639605       1 controller.go:667] quota admission added evaluator for: daemonsets.apps
I0614 10:08:23.805033       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0614 10:08:23.810731       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0614 10:08:24.797756       1 controller.go:667] quota admission added evaluator for: replicasets.apps
I0614 10:08:24.843961       1 controller.go:667] quota admission added evaluator for: controllerrevisions.apps
I0614 10:09:30.507935       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0614 10:09:30.509625       1 alloc.go:328] "allocated clusterIPs" service="default/fastapi-service" clusterIPs={"IPv4":"10.109.242.76"}


==> kube-controller-manager [815c5f0fdeb7] <==
I0614 10:08:23.644691       1 shared_informer.go:350] "Waiting for caches to sync" controller="job"
I0614 10:08:23.692994       1 node_lifecycle_controller.go:419] "Controller will reconcile labels" logger="node-lifecycle-controller"
I0614 10:08:23.693034       1 controllermanager.go:778] "Started controller" controller="node-lifecycle-controller"
I0614 10:08:23.693191       1 node_lifecycle_controller.go:453] "Sending events to api server" logger="node-lifecycle-controller"
I0614 10:08:23.693235       1 node_lifecycle_controller.go:464] "Starting node controller" logger="node-lifecycle-controller"
I0614 10:08:23.693242       1 shared_informer.go:350] "Waiting for caches to sync" controller="taint"
I0614 10:08:23.697839       1 shared_informer.go:350] "Waiting for caches to sync" controller="resource quota"
I0614 10:08:23.700953       1 actual_state_of_world.go:541] "Failed to update statusUpdateNeeded field in actual state of world" logger="persistentvolume-attach-detach-controller" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"minikube\" does not exist"
I0614 10:08:23.704324       1 shared_informer.go:350] "Waiting for caches to sync" controller="garbage collector"
I0614 10:08:23.711184       1 shared_informer.go:357] "Caches are synced" controller="service-cidr-controller"
I0614 10:08:23.729869       1 shared_informer.go:357] "Caches are synced" controller="expand"
I0614 10:08:23.743668       1 shared_informer.go:357] "Caches are synced" controller="TTL"
I0614 10:08:23.744529       1 shared_informer.go:357] "Caches are synced" controller="PV protection"
I0614 10:08:23.744574       1 shared_informer.go:357] "Caches are synced" controller="validatingadmissionpolicy-status"
I0614 10:08:23.744934       1 shared_informer.go:357] "Caches are synced" controller="cronjob"
I0614 10:08:23.746303       1 shared_informer.go:357] "Caches are synced" controller="ClusterRoleAggregator"
I0614 10:08:23.747674       1 shared_informer.go:357] "Caches are synced" controller="crt configmap"
I0614 10:08:23.747713       1 shared_informer.go:357] "Caches are synced" controller="node"
I0614 10:08:23.747833       1 range_allocator.go:177] "Sending events to api server" logger="node-ipam-controller"
I0614 10:08:23.747931       1 range_allocator.go:183] "Starting range CIDR allocator" logger="node-ipam-controller"
I0614 10:08:23.747986       1 shared_informer.go:350] "Waiting for caches to sync" controller="cidrallocator"
I0614 10:08:23.747999       1 shared_informer.go:357] "Caches are synced" controller="cidrallocator"
I0614 10:08:23.751101       1 shared_informer.go:357] "Caches are synced" controller="service account"
I0614 10:08:23.757412       1 range_allocator.go:428] "Set node PodCIDR" logger="node-ipam-controller" node="minikube" podCIDRs=["10.244.0.0/24"]
I0614 10:08:23.792883       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrapproving"
I0614 10:08:23.793590       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrsigning-kubelet-serving"
I0614 10:08:23.793968       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrsigning-kubelet-client"
I0614 10:08:23.794208       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrsigning-kube-apiserver-client"
I0614 10:08:23.794228       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrsigning-legacy-unknown"
I0614 10:08:23.796785       1 shared_informer.go:357] "Caches are synced" controller="namespace"
I0614 10:08:23.798879       1 shared_informer.go:357] "Caches are synced" controller="TTL after finished"
I0614 10:08:23.799714       1 shared_informer.go:357] "Caches are synced" controller="bootstrap_signer"
I0614 10:08:23.897215       1 shared_informer.go:357] "Caches are synced" controller="endpoint_slice_mirroring"
I0614 10:08:23.997990       1 shared_informer.go:357] "Caches are synced" controller="ephemeral"
I0614 10:08:23.998111       1 shared_informer.go:357] "Caches are synced" controller="PVC protection"
I0614 10:08:24.001690       1 shared_informer.go:357] "Caches are synced" controller="GC"
I0614 10:08:24.004033       1 shared_informer.go:357] "Caches are synced" controller="ReplicaSet"
I0614 10:08:24.013455       1 shared_informer.go:357] "Caches are synced" controller="disruption"
I0614 10:08:24.024766       1 shared_informer.go:357] "Caches are synced" controller="persistent volume"
I0614 10:08:24.036062       1 shared_informer.go:357] "Caches are synced" controller="taint-eviction-controller"
I0614 10:08:24.045308       1 shared_informer.go:357] "Caches are synced" controller="job"
I0614 10:08:24.045499       1 shared_informer.go:357] "Caches are synced" controller="ReplicationController"
I0614 10:08:24.046394       1 shared_informer.go:357] "Caches are synced" controller="legacy-service-account-token-cleaner"
I0614 10:08:24.090469       1 shared_informer.go:357] "Caches are synced" controller="endpoint_slice"
I0614 10:08:24.090477       1 shared_informer.go:357] "Caches are synced" controller="deployment"
I0614 10:08:24.094363       1 shared_informer.go:357] "Caches are synced" controller="stateful set"
I0614 10:08:24.094385       1 shared_informer.go:357] "Caches are synced" controller="daemon sets"
I0614 10:08:24.094410       1 shared_informer.go:357] "Caches are synced" controller="taint"
I0614 10:08:24.094475       1 node_lifecycle_controller.go:1221] "Initializing eviction metric for zone" logger="node-lifecycle-controller" zone=""
I0614 10:08:24.094552       1 node_lifecycle_controller.go:873] "Missing timestamp for Node. Assuming now as a timestamp" logger="node-lifecycle-controller" node="minikube"
I0614 10:08:24.094588       1 node_lifecycle_controller.go:1067] "Controller detected that zone is now in new state" logger="node-lifecycle-controller" zone="" newState="Normal"
I0614 10:08:24.096603       1 shared_informer.go:357] "Caches are synced" controller="resource quota"
I0614 10:08:24.096766       1 shared_informer.go:357] "Caches are synced" controller="endpoint"
I0614 10:08:24.098357       1 shared_informer.go:357] "Caches are synced" controller="resource quota"
I0614 10:08:24.098409       1 shared_informer.go:357] "Caches are synced" controller="attach detach"
I0614 10:08:24.103929       1 shared_informer.go:357] "Caches are synced" controller="HPA"
I0614 10:08:24.505272       1 shared_informer.go:357] "Caches are synced" controller="garbage collector"
I0614 10:08:24.542733       1 shared_informer.go:357] "Caches are synced" controller="garbage collector"
I0614 10:08:24.542760       1 garbagecollector.go:154] "Garbage collector: all resource monitors have synced" logger="garbage-collector-controller"
I0614 10:08:24.542778       1 garbagecollector.go:157] "Proceeding to collect garbage" logger="garbage-collector-controller"


==> kube-proxy [e9a5f1294769] <==
I0614 10:08:25.541331       1 server_linux.go:63] "Using iptables proxy"
I0614 10:08:25.712775       1 server.go:715] "Successfully retrieved node IP(s)" IPs=["192.168.49.2"]
E0614 10:08:25.712850       1 server.go:245] "Kube-proxy configuration may be incomplete or incorrect" err="nodePortAddresses is unset; NodePort connections will be accepted on all local IPs. Consider using `--nodeport-addresses primary`"
I0614 10:08:25.729999       1 server.go:254] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0614 10:08:25.730040       1 server_linux.go:145] "Using iptables Proxier"
I0614 10:08:25.734106       1 proxier.go:243] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses" ipFamily="IPv4"
I0614 10:08:25.737119       1 server.go:516] "Version info" version="v1.33.1"
I0614 10:08:25.737153       1 server.go:518] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0614 10:08:25.738523       1 config.go:199] "Starting service config controller"
I0614 10:08:25.738561       1 shared_informer.go:350] "Waiting for caches to sync" controller="service config"
I0614 10:08:25.738581       1 config.go:440] "Starting serviceCIDR config controller"
I0614 10:08:25.738595       1 shared_informer.go:350] "Waiting for caches to sync" controller="serviceCIDR config"
I0614 10:08:25.738612       1 config.go:105] "Starting endpoint slice config controller"
I0614 10:08:25.738633       1 shared_informer.go:350] "Waiting for caches to sync" controller="endpoint slice config"
I0614 10:08:25.738656       1 config.go:329] "Starting node config controller"
I0614 10:08:25.738739       1 shared_informer.go:350] "Waiting for caches to sync" controller="node config"
I0614 10:08:25.838744       1 shared_informer.go:357] "Caches are synced" controller="endpoint slice config"
I0614 10:08:25.838768       1 shared_informer.go:357] "Caches are synced" controller="serviceCIDR config"
I0614 10:08:25.838801       1 shared_informer.go:357] "Caches are synced" controller="service config"
I0614 10:08:25.838840       1 shared_informer.go:357] "Caches are synced" controller="node config"


==> kube-scheduler [ea10bff98405] <==
I0614 10:08:16.193930       1 serving.go:386] Generated self-signed cert in-memory
W0614 10:08:17.195283       1 requestheader_controller.go:204] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0614 10:08:17.195493       1 authentication.go:397] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0614 10:08:17.195513       1 authentication.go:398] Continuing without authentication configuration. This may treat all requests as anonymous.
W0614 10:08:17.195520       1 authentication.go:399] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0614 10:08:17.203682       1 server.go:171] "Starting Kubernetes Scheduler" version="v1.33.1"
I0614 10:08:17.203708       1 server.go:173] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0614 10:08:17.204902       1 configmap_cafile_content.go:205] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0614 10:08:17.204945       1 shared_informer.go:350] "Waiting for caches to sync" controller="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0614 10:08:17.205176       1 secure_serving.go:211] Serving securely on 127.0.0.1:10259
I0614 10:08:17.205283       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
E0614 10:08:17.209118       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError" reflector="runtime/asm_amd64.s:1700" type="*v1.ConfigMap"
E0614 10:08:17.209190       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolume"
E0614 10:08:17.209197       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicaSet"
E0614 10:08:17.209210       1 reflector.go:200] "Failed to watch" err="failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"volumeattachments\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.VolumeAttachment"
E0614 10:08:17.209236       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Node"
E0614 10:08:17.209248       1 reflector.go:200] "Failed to watch" err="failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StorageClass"
E0614 10:08:17.209251       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Pod"
E0614 10:08:17.209258       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Namespace"
E0614 10:08:17.209311       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Service"
E0614 10:08:17.209308       1 reflector.go:200] "Failed to watch" err="failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StatefulSet"
E0614 10:08:17.209321       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSINode"
E0614 10:08:17.209324       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSIStorageCapacity"
E0614 10:08:17.209337       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicationController"
E0614 10:08:17.209368       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSIDriver"
E0614 10:08:17.209740       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PodDisruptionBudget"
E0614 10:08:17.209814       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolumeClaim"
E0614 10:08:18.089815       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Pod"
E0614 10:08:18.141351       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSINode"
E0614 10:08:18.157533       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Node"
E0614 10:08:18.168627       1 reflector.go:200] "Failed to watch" err="failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"volumeattachments\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.VolumeAttachment"
E0614 10:08:18.186815       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicationController"
E0614 10:08:18.288578       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicaSet"
E0614 10:08:18.331132       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PodDisruptionBudget"
I0614 10:08:18.706407       1 shared_informer.go:357] "Caches are synced" controller="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"


==> kubelet <==
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612730    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-certs\" (UniqueName: \"kubernetes.io/host-path/3924ef3609584191d8d09190210d2d78-etcd-certs\") pod \"etcd-minikube\" (UID: \"3924ef3609584191d8d09190210d2d78\") " pod="kube-system/etcd-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612764    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-usr-local-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612775    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"flexvolume-dir\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-flexvolume-dir\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612784    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-k8s-certs\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612793    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-ca-certs\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612802    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-usr-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612810    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-data\" (UniqueName: \"kubernetes.io/host-path/3924ef3609584191d8d09190210d2d78-etcd-data\") pod \"etcd-minikube\" (UID: \"3924ef3609584191d8d09190210d2d78\") " pod="kube-system/etcd-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612846    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-ca-certs\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612854    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-etc-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612861    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-kubeconfig\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612867    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-usr-local-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612877    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-usr-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612883    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/feee622ba49882ef945e2406d3ba86df-kubeconfig\") pod \"kube-scheduler-minikube\" (UID: \"feee622ba49882ef945e2406d3ba86df\") " pod="kube-system/kube-scheduler-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612892    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-etc-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jun 14 10:08:19 minikube kubelet[2520]: I0614 10:08:19.612898    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-k8s-certs\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jun 14 10:08:20 minikube kubelet[2520]: I0614 10:08:20.405596    2520 apiserver.go:52] "Watching apiserver"
Jun 14 10:08:20 minikube kubelet[2520]: I0614 10:08:20.412481    2520 desired_state_of_world_populator.go:158] "Finished populating initial desired state of world"
Jun 14 10:08:20 minikube kubelet[2520]: I0614 10:08:20.513162    2520 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/etcd-minikube"
Jun 14 10:08:20 minikube kubelet[2520]: I0614 10:08:20.513322    2520 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/kube-scheduler-minikube"
Jun 14 10:08:20 minikube kubelet[2520]: I0614 10:08:20.513486    2520 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/kube-controller-manager-minikube"
Jun 14 10:08:20 minikube kubelet[2520]: E0614 10:08:20.592731    2520 kubelet.go:3311] "Failed creating a mirror pod" err="pods \"etcd-minikube\" already exists" pod="kube-system/etcd-minikube"
Jun 14 10:08:20 minikube kubelet[2520]: E0614 10:08:20.602939    2520 kubelet.go:3311] "Failed creating a mirror pod" err="pods \"kube-controller-manager-minikube\" already exists" pod="kube-system/kube-controller-manager-minikube"
Jun 14 10:08:20 minikube kubelet[2520]: E0614 10:08:20.604727    2520 kubelet.go:3311] "Failed creating a mirror pod" err="pods \"kube-scheduler-minikube\" already exists" pod="kube-system/kube-scheduler-minikube"
Jun 14 10:08:20 minikube kubelet[2520]: I0614 10:08:20.688327    2520 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-scheduler-minikube" podStartSLOduration=2.688301691 podStartE2EDuration="2.688301691s" podCreationTimestamp="2025-06-14 10:08:18 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-06-14 10:08:20.619937341 +0000 UTC m=+1.256569561" watchObservedRunningTime="2025-06-14 10:08:20.688301691 +0000 UTC m=+1.324933918"
Jun 14 10:08:20 minikube kubelet[2520]: I0614 10:08:20.688524    2520 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-controller-manager-minikube" podStartSLOduration=2.68851439 podStartE2EDuration="2.68851439s" podCreationTimestamp="2025-06-14 10:08:18 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-06-14 10:08:20.688248598 +0000 UTC m=+1.324880827" watchObservedRunningTime="2025-06-14 10:08:20.68851439 +0000 UTC m=+1.325146608"
Jun 14 10:08:20 minikube kubelet[2520]: I0614 10:08:20.700403    2520 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/etcd-minikube" podStartSLOduration=2.700368365 podStartE2EDuration="2.700368365s" podCreationTimestamp="2025-06-14 10:08:18 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-06-14 10:08:20.700358056 +0000 UTC m=+1.336990277" watchObservedRunningTime="2025-06-14 10:08:20.700368365 +0000 UTC m=+1.337000583"
Jun 14 10:08:20 minikube kubelet[2520]: I0614 10:08:20.794743    2520 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-apiserver-minikube" podStartSLOduration=1.794727026 podStartE2EDuration="1.794727026s" podCreationTimestamp="2025-06-14 10:08:19 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-06-14 10:08:20.794612473 +0000 UTC m=+1.431244695" watchObservedRunningTime="2025-06-14 10:08:20.794727026 +0000 UTC m=+1.431359247"
Jun 14 10:08:24 minikube kubelet[2520]: I0614 10:08:24.209230    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"tmp\" (UniqueName: \"kubernetes.io/host-path/0a578a05-c276-4b63-a6de-bcd936475928-tmp\") pod \"storage-provisioner\" (UID: \"0a578a05-c276-4b63-a6de-bcd936475928\") " pod="kube-system/storage-provisioner"
Jun 14 10:08:24 minikube kubelet[2520]: I0614 10:08:24.209285    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-8z22h\" (UniqueName: \"kubernetes.io/projected/0a578a05-c276-4b63-a6de-bcd936475928-kube-api-access-8z22h\") pod \"storage-provisioner\" (UID: \"0a578a05-c276-4b63-a6de-bcd936475928\") " pod="kube-system/storage-provisioner"
Jun 14 10:08:24 minikube kubelet[2520]: I0614 10:08:24.619672    2520 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="7860226e591bac930b465de9cc33767aad967ad785e198fe2ec08051ecd48796"
Jun 14 10:08:24 minikube kubelet[2520]: I0614 10:08:24.915252    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/5664721e-f42b-4848-a632-e09c50c5a368-xtables-lock\") pod \"kube-proxy-xrglr\" (UID: \"5664721e-f42b-4848-a632-e09c50c5a368\") " pod="kube-system/kube-proxy-xrglr"
Jun 14 10:08:24 minikube kubelet[2520]: I0614 10:08:24.915295    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-proxy\" (UniqueName: \"kubernetes.io/configmap/5664721e-f42b-4848-a632-e09c50c5a368-kube-proxy\") pod \"kube-proxy-xrglr\" (UID: \"5664721e-f42b-4848-a632-e09c50c5a368\") " pod="kube-system/kube-proxy-xrglr"
Jun 14 10:08:24 minikube kubelet[2520]: I0614 10:08:24.915310    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-g8vtz\" (UniqueName: \"kubernetes.io/projected/5664721e-f42b-4848-a632-e09c50c5a368-kube-api-access-g8vtz\") pod \"kube-proxy-xrglr\" (UID: \"5664721e-f42b-4848-a632-e09c50c5a368\") " pod="kube-system/kube-proxy-xrglr"
Jun 14 10:08:24 minikube kubelet[2520]: I0614 10:08:24.915324    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" (UniqueName: \"kubernetes.io/host-path/5664721e-f42b-4848-a632-e09c50c5a368-lib-modules\") pod \"kube-proxy-xrglr\" (UID: \"5664721e-f42b-4848-a632-e09c50c5a368\") " pod="kube-system/kube-proxy-xrglr"
Jun 14 10:08:25 minikube kubelet[2520]: I0614 10:08:25.015428    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/155c5936-fc77-467c-935d-c4d87093ef18-config-volume\") pod \"coredns-674b8bbfcf-hfx6p\" (UID: \"155c5936-fc77-467c-935d-c4d87093ef18\") " pod="kube-system/coredns-674b8bbfcf-hfx6p"
Jun 14 10:08:25 minikube kubelet[2520]: I0614 10:08:25.015493    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-zjf6f\" (UniqueName: \"kubernetes.io/projected/155c5936-fc77-467c-935d-c4d87093ef18-kube-api-access-zjf6f\") pod \"coredns-674b8bbfcf-hfx6p\" (UID: \"155c5936-fc77-467c-935d-c4d87093ef18\") " pod="kube-system/coredns-674b8bbfcf-hfx6p"
Jun 14 10:08:25 minikube kubelet[2520]: I0614 10:08:25.651511    2520 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/storage-provisioner" podStartSLOduration=4.651494479 podStartE2EDuration="4.651494479s" podCreationTimestamp="2025-06-14 10:08:21 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-06-14 10:08:25.65145949 +0000 UTC m=+6.288091712" watchObservedRunningTime="2025-06-14 10:08:25.651494479 +0000 UTC m=+6.288126698"
Jun 14 10:08:25 minikube kubelet[2520]: I0614 10:08:25.662271    2520 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-proxy-xrglr" podStartSLOduration=1.662253195 podStartE2EDuration="1.662253195s" podCreationTimestamp="2025-06-14 10:08:24 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-06-14 10:08:25.662093039 +0000 UTC m=+6.298725261" watchObservedRunningTime="2025-06-14 10:08:25.662253195 +0000 UTC m=+6.298885414"
Jun 14 10:08:26 minikube kubelet[2520]: I0614 10:08:26.670991    2520 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/coredns-674b8bbfcf-hfx6p" podStartSLOduration=2.670977299 podStartE2EDuration="2.670977299s" podCreationTimestamp="2025-06-14 10:08:24 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-06-14 10:08:26.670932821 +0000 UTC m=+7.307565042" watchObservedRunningTime="2025-06-14 10:08:26.670977299 +0000 UTC m=+7.307609517"
Jun 14 10:08:27 minikube kubelet[2520]: I0614 10:08:27.666711    2520 prober_manager.go:312] "Failed to trigger a manual run" probe="Readiness"
Jun 14 10:08:29 minikube kubelet[2520]: I0614 10:08:29.787826    2520 kuberuntime_manager.go:1746] "Updating runtime config through cri with podcidr" CIDR="10.244.0.0/24"
Jun 14 10:08:29 minikube kubelet[2520]: I0614 10:08:29.788936    2520 kubelet_network.go:61] "Updating Pod CIDR" originalPodCIDR="" newPodCIDR="10.244.0.0/24"
Jun 14 10:08:34 minikube kubelet[2520]: I0614 10:08:34.372941    2520 prober_manager.go:312] "Failed to trigger a manual run" probe="Readiness"
Jun 14 10:08:46 minikube kubelet[2520]: I0614 10:08:46.761836    2520 scope.go:117] "RemoveContainer" containerID="8199374467a762712fa1de47a91622a10a327d96b1ea402592440cf5afe7a48d"
Jun 14 10:09:25 minikube kubelet[2520]: I0614 10:09:25.604460    2520 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-f4sf2\" (UniqueName: \"kubernetes.io/projected/60c9fedc-395b-487f-a615-a3d77af1d9d0-kube-api-access-f4sf2\") pod \"fastapi-deployment-76c4c664bc-m56nx\" (UID: \"60c9fedc-395b-487f-a615-a3d77af1d9d0\") " pod="default/fastapi-deployment-76c4c664bc-m56nx"
Jun 14 10:09:26 minikube kubelet[2520]: I0614 10:09:26.065981    2520 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="2d15fb0db0e589518d8f80e171192ce9770691ae0a09dcee8691a887a41d8ee0"
Jun 14 10:09:27 minikube kubelet[2520]: E0614 10:09:27.603353    2520 log.go:32] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="fastapi-k8s-app:latest"
Jun 14 10:09:27 minikube kubelet[2520]: E0614 10:09:27.603415    2520 kuberuntime_image.go:42] "Failed to pull image" err="Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="fastapi-k8s-app:latest"
Jun 14 10:09:27 minikube kubelet[2520]: E0614 10:09:27.603555    2520 kuberuntime_manager.go:1358] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-k8s-app,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f4sf2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-76c4c664bc-m56nx_default(60c9fedc-395b-487f-a615-a3d77af1d9d0): ErrImagePull: Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" logger="UnhandledError"
Jun 14 10:09:27 minikube kubelet[2520]: E0614 10:09:27.604777    2520 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ErrImagePull: \"Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/fastapi-deployment-76c4c664bc-m56nx" podUID="60c9fedc-395b-487f-a615-a3d77af1d9d0"
Jun 14 10:09:28 minikube kubelet[2520]: E0614 10:09:28.079907    2520 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"fastapi-k8s-app\\\": ErrImagePull: Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/fastapi-deployment-76c4c664bc-m56nx" podUID="60c9fedc-395b-487f-a615-a3d77af1d9d0"
Jun 14 10:09:40 minikube kubelet[2520]: E0614 10:09:40.911312    2520 log.go:32] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="fastapi-k8s-app:latest"
Jun 14 10:09:40 minikube kubelet[2520]: E0614 10:09:40.911372    2520 kuberuntime_image.go:42] "Failed to pull image" err="Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="fastapi-k8s-app:latest"
Jun 14 10:09:40 minikube kubelet[2520]: E0614 10:09:40.911479    2520 kuberuntime_manager.go:1358] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-k8s-app,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f4sf2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-76c4c664bc-m56nx_default(60c9fedc-395b-487f-a615-a3d77af1d9d0): ErrImagePull: Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" logger="UnhandledError"
Jun 14 10:09:40 minikube kubelet[2520]: E0614 10:09:40.912681    2520 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ErrImagePull: \"Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/fastapi-deployment-76c4c664bc-m56nx" podUID="60c9fedc-395b-487f-a615-a3d77af1d9d0"
Jun 14 10:09:52 minikube kubelet[2520]: E0614 10:09:52.422746    2520 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ImagePullBackOff: \"Back-off pulling image \\\"fastapi-k8s-app\\\": ErrImagePull: Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/fastapi-deployment-76c4c664bc-m56nx" podUID="60c9fedc-395b-487f-a615-a3d77af1d9d0"
Jun 14 10:10:04 minikube kubelet[2520]: E0614 10:10:04.884837    2520 log.go:32] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="fastapi-k8s-app:latest"
Jun 14 10:10:04 minikube kubelet[2520]: E0614 10:10:04.884892    2520 kuberuntime_image.go:42] "Failed to pull image" err="Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="fastapi-k8s-app:latest"
Jun 14 10:10:04 minikube kubelet[2520]: E0614 10:10:04.885026    2520 kuberuntime_manager.go:1358] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-k8s-app,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f4sf2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-76c4c664bc-m56nx_default(60c9fedc-395b-487f-a615-a3d77af1d9d0): ErrImagePull: Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" logger="UnhandledError"
Jun 14 10:10:04 minikube kubelet[2520]: E0614 10:10:04.886213    2520 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with ErrImagePull: \"Error response from daemon: pull access denied for fastapi-k8s-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/fastapi-deployment-76c4c664bc-m56nx" podUID="60c9fedc-395b-487f-a615-a3d77af1d9d0"


==> storage-provisioner [19895c0b8cc6] <==
W0614 10:09:09.140676       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:09.149604       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:11.151582       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:11.161538       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:13.165796       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:13.178648       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:15.183655       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:15.188848       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:17.190987       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:17.204265       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:19.207485       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:19.236603       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:21.241444       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:21.244933       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:23.249346       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:23.254382       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:25.256623       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:25.260651       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:27.264247       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:27.267986       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:29.271051       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:29.275101       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:31.278360       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:31.282497       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:33.285356       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:33.289909       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:35.293213       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:35.298693       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:37.302447       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:37.307461       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:39.309542       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:39.314438       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:41.319077       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:41.322620       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:43.326992       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:43.335114       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:45.337965       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:45.341615       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:47.344509       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:47.347782       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:49.352827       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:49.357290       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:51.363744       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:51.369146       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:53.372026       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:53.376763       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:55.380322       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:55.387507       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:57.392373       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:57.397109       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:59.401271       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:09:59.405442       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:10:01.407956       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:10:01.411119       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:10:03.416730       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:10:03.422570       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:10:05.427902       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:10:05.432156       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:10:07.434374       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0614 10:10:07.437466       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice


==> storage-provisioner [8199374467a7] <==
I0614 10:08:24.814860       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0614 10:08:45.870038       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": dial tcp 10.96.0.1:443: connect: connection refused

